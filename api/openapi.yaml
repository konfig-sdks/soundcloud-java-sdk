openapi: 3.0.3
info:
  contact:
    name: API issue tracker
    url: https://github.com/soundcloud/api
  description: "Discover and play over 320 million music tracks. Join the world’s\
    \ largest online community of artists, bands, DJs, and audio creators."
  termsOfService: https://developers.soundcloud.com/docs/api/terms-of-use
  title: SoundCloud Public API Specification
  version: 1.0.0
  x-konfig-uses-multipart-form-data: true
servers:
- url: https://api.soundcloud.com
tags:
- description: Own User Endpoints.
  name: me
- description: Tracks Endpoints.
  name: tracks
- description: SoundCloud Users Endpoints.
  name: users
- description: Playlists Endpoints.
  name: playlists
- description: Liking Tracks & Playlists.
  name: likes
- description: Reposting Tracks & Playlists.
  name: reposts
- description: Search Endpoints.
  name: search
- description: Authentication and Authorization Endpoints.
  name: oauth
- description: Miscellaneous Endpoints.
  name: miscellaneous
paths:
  /connect:
    get:
      description: |
        <h3>Security Advice</h3>
        * [OAuth Authorization Code flow](https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics-16#section-2.1.1) (`response_type=code`) is the only allowed method of authorization.
        * Use the `state` parameter for [CSRF protection](https://tools.ietf.org/html/draft-ietf-oauth-security-topics-16#section-4.7). Pass a sufficient  random nonce here and verify this nonce again after retrieving the token.
      operationId: Oauth_authorizeUser
      parameters:
      - description: The client id belonging to your application
        example: some client
        explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: some client
      - description: The redirect uri you have configured for your application
        example: https://soundcloud.com
        explode: true
        in: query
        name: redirect_uri
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: https://soundcloud.com
      - description: Support only the Authorization Code Flow
        example: code
        explode: true
        in: query
        name: response_type
        required: true
        schema:
          enum:
          - code
          type: string
        style: form
        x-konfig-original-example: code
      - description: Any value included here will be appended to the redirect URI.
          Use this for CSRF protection.
        example: encrypted_session_info
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: encrypted_session_info
      responses:
        "200":
          description: OK
        "302":
          description: Redirect to connect portal
          headers:
            Location:
              description: Redirect to connect poral "https://secure.soundcloud.com/connect"
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      summary: "The OAuth2 authorization endpoint. Your app redirects a user to this\
        \ endpoint, allowing them to delegate access to their account."
      tags:
      - oauth
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--connect
      x-accepts: application/json; charset=utf-8
  /oauth2/token:
    post:
      operationId: Oauth_provisionAccessToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OAuthToken'
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                ExpiringToken:
                  $ref: '#/components/examples/ExpiringToken'
          description: Success
        "400":
          content:
            application/json:
              examples:
                ErrorInvalidGrant:
                  $ref: '#/components/examples/ErrorInvalidGrant'
                ErrorUnsupportedGrant:
                  $ref: '#/components/examples/ErrorUnsupportedGrant'
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/OauthProvisionAccessTokenResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              examples:
                ErrorInvalidGrant:
                  value:
                    code: 401
                    message: invalid_grant
                    link: https://developers.soundcloud.com/docs/api/guide#authentication
                ErrorInvalidScope:
                  $ref: '#/components/examples/ErrorInvalidScope'
                ErrorInvalidClient:
                  $ref: '#/components/examples/ErrorInvalidClient'
              schema:
                $ref: '#/components/schemas/OauthProvisionAccessToken401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: This endpoint accepts POST requests and is used to provision access
        tokens once a user has authorized your application.
      tags:
      - oauth
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--oauth2-token
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /me:
    get:
      operationId: Me_getUserInformation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Me'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns the authenticated user’s information.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me
      x-accepts: application/json; charset=utf-8
  /me/activities:
    get:
      operationId: Me_getActivities
      parameters:
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Activities'
              schema:
                $ref: '#/components/schemas/Activities'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns the authenticated user's activities.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-activities
      x-accepts: application/json; charset=utf-8
  /me/activities/all/own:
    get:
      operationId: Me_getRecentActivities
      parameters:
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Activities'
              schema:
                $ref: '#/components/schemas/Activities'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Recent the authenticated user's activities.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-activities-all-own
      x-accepts: application/json; charset=utf-8
  /me/activities/tracks:
    get:
      operationId: Me_getRecentTracks
      parameters:
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Activities'
              schema:
                $ref: '#/components/schemas/Activities'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns the authenticated user's recent track related activities.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-activities-tracks
      x-accepts: application/json; charset=utf-8
  /me/likes/tracks:
    get:
      operationId: Me_listLikedTracks
      parameters:
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview,blocked"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview,blocked"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access_explicit-schema
        style: form
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of favorited or liked tracks of the authenticated user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-likes-tracks
      x-accepts: application/json; charset=utf-8
  /me/likes/playlists:
    get:
      operationId: Me_getLikedPlaylists
      parameters:
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlists'
                playlistsArray:
                  $ref: '#/components/examples/PlaylistsArray'
              schema:
                $ref: '#/components/schemas/MeGetLikedPlaylistsResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of favorited or liked playlists of the authenticated
        user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-likes-playlists
      x-accepts: application/json; charset=utf-8
  /me/followings:
    get:
      operationId: Me_getFollowedUsers
      parameters:
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of users who are followed by the authenticated user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-followings
      x-accepts: application/json; charset=utf-8
  /me/followings/tracks:
    get:
      operationId: Me_listFollowedTracks
      parameters:
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/TracksList'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of recent tracks from users followed by the authenticated
        user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-followings-tracks
      x-accepts: application/json; charset=utf-8
  /me/followings/{user_id}:
    delete:
      operationId: Me_deleteFollowedUser
      parameters:
      - description: SoundCloud User id
        example: 743372812
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 743372812
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                "200":
                  $ref: '#/components/examples/OK'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
        "422":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/UnprocessableEntity'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Deletes a user who is followed by the authenticated user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--me-followings-user_id
      x-accepts: application/json
    get:
      deprecated: true
      operationId: Me_getFollowedUser
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/User'
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: "Returns a user who is followed by the authenticated user. (use /users/{user_id}\
        \ instead, to fetch the user details)"
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-followings-user_id
      x-accepts: application/json
    put:
      operationId: Me_followUser
      parameters:
      - description: SoundCloud User id
        example: 743372812
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 743372812
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Successful'
          description: Success
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/User'
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Follows a user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--me-followings-user_id
      x-accepts: application/json
  /me/followers:
    get:
      operationId: Me_getFollowersList
      parameters:
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of users who are following the authenticated user.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-followers
      x-accepts: application/json; charset=utf-8
  /me/followers/{follower_id}:
    get:
      deprecated: true
      operationId: Me_getFollowerById
      parameters:
      - description: SoundCloud User id to denote a Follower
        example: 743372812
        explode: false
        in: path
        name: follower_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 743372812
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/User'
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: "Returns a user who is following the authenticated user. (use /users/{user_id}\
        \ instead, to fetch the user details)"
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-followers-follower_id
      x-accepts: application/json; charset=utf-8
  /me/playlists:
    get:
      description: "Returns playlist info, playlist tracks and tracks owner info."
      operationId: Me_listPlaylistsInfoTracksOwner
      parameters:
      - description: A boolean flag to request a playlist with or without tracks.
          Default is `true`.
        example: true
        explode: true
        in: query
        name: show_tracks
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlists'
                playlistsArray:
                  $ref: '#/components/examples/PlaylistsArray'
              schema:
                $ref: '#/components/schemas/MeGetLikedPlaylistsResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns user’s playlists (sets).
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-playlists
      x-accepts: application/json
  /me/tracks:
    get:
      operationId: Me_listUserTracks
      parameters:
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user's tracks.
      tags:
      - me
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--me-tracks
      x-accepts: application/json; charset=utf-8
  /tracks:
    get:
      operationId: Search_byQuery
      parameters:
      - description: search
        example: hello
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: hello
      - description: A comma separated list of track ids to filter on
        example: "1,2,3"
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "1,2,3"
      - description: A comma separated list of genres
        example: "Pop,House"
        explode: true
        in: query
        name: genres
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "Pop,House"
      - description: A comma separated list of tags
        example: test
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: test
      - description: "Return tracks with a specified bpm[from], bpm[to]"
        explode: false
        in: query
        name: bpm
        required: false
        schema:
          $ref: '#/components/schemas/Search_byQuery_bpm_parameter'
        style: deepObject
      - description: Return tracks within a specified duration range
        explode: false
        in: query
        name: duration
        required: false
        schema:
          $ref: '#/components/schemas/Search_byQuery_duration_parameter'
        style: deepObject
      - description: (yyyy-mm-dd hh:mm:ss) return tracks created within the specified
          dates
        explode: false
        in: query
        name: created_at
        required: false
        schema:
          $ref: '#/components/schemas/Search_byQuery_created_at_parameter'
        style: deepObject
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "500":
          description: Internal Server Error
      security:
      - AuthHeader: []
      summary: Performs a track search based on a query
      tags:
      - search
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks
      x-accepts: application/json; charset=utf-8
    post:
      operationId: Tracks_uploadNewTrack
      requestBody:
        content:
          multipart/form-data:
            examples:
              default:
                $ref: '#/components/examples/TrackDataRequest'
            schema:
              $ref: '#/components/schemas/TracksUploadNewTrackRequest'
          multipart/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TracksUploadNewTrackRequest1'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Track'
              schema:
                $ref: '#/components/schemas/Track'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/UnprocessableEntity'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Uploads a new track.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--tracks
      x-content-type: multipart/form-data
      x-accepts: application/json
  /playlists:
    get:
      operationId: Search_byQuery
      parameters:
      - description: search
        example: hello
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: hello
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: A boolean flag to request a playlist with or without tracks.
          Default is `true`.
        example: true
        explode: true
        in: query
        name: show_tracks
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlists'
                playlistsArray:
                  $ref: '#/components/examples/PlaylistsArray'
              schema:
                $ref: '#/components/schemas/MeGetLikedPlaylistsResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Performs a playlist search based on a query
      tags:
      - search
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--playlists
      x-accepts: application/json; charset=utf-8
    post:
      operationId: Playlists_createNewPlaylist
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: '#/components/examples/CreateUpdatePlaylistRequest'
            schema:
              $ref: '#/components/schemas/CreateUpdatePlaylistRequest'
          multipart/form-data:
            examples:
              default:
                $ref: '#/components/examples/CreateUpdatePlaylistFormRequest'
            schema:
              $ref: '#/components/schemas/PlaylistsCreateNewPlaylistRequest'
        description: Create Playlist request
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlist'
              schema:
                $ref: '#/components/schemas/Playlist'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Creates a playlist.
      tags:
      - playlists
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--playlists
      x-content-type: application/json
      x-accepts: application/json
  /users:
    get:
      operationId: Search_userQuery
      parameters:
      - description: search
        example: hello
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: hello
      - description: A comma separated list of track ids to filter on
        example: "1,2,3"
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "1,2,3"
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Performs a user search based on a query
      tags:
      - search
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users
      x-accepts: application/json; charset=utf-8
  /playlists/{playlist_id}:
    delete:
      operationId: Playlists_deletePlaylist
      parameters:
      - description: SoundCloud playlist id
        example: 10
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 10
      responses:
        "200":
          description: Success
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Deletes a playlist.
      tags:
      - playlists
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--playlists-playlist_id
      x-accepts: application/json
    get:
      operationId: Playlists_getPlaylistById
      parameters:
      - description: SoundCloud playlist id
        example: 1212781357
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1212781357
      - description: A secret token to fetch private playlists/tracks
        explode: true
        in: query
        name: secret_token
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: A boolean flag to request a playlist with or without tracks.
          Default is `true`.
        example: true
        explode: true
        in: query
        name: show_tracks
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlist'
              schema:
                $ref: '#/components/schemas/Playlist'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a playlist.
      tags:
      - playlists
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--playlists-playlist_id
      x-accepts: application/json; charset=utf-8
    put:
      operationId: Playlists_updatePlaylistById
      parameters:
      - description: SoundCloud playlist id
        example: 10
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 10
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: '#/components/examples/CreateUpdatePlaylistRequest'
            schema:
              $ref: '#/components/schemas/CreateUpdatePlaylistRequest'
        description: Playlist payload
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlist'
              schema:
                $ref: '#/components/schemas/Playlist'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Updates a playlist.
      tags:
      - playlists
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--playlists-playlist_id
      x-content-type: application/json
      x-accepts: application/json
  /playlists/{playlist_id}/tracks:
    get:
      operationId: Playlists_getTracks
      parameters:
      - description: SoundCloud playlist id
        example: 1212781357
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1212781357
      - description: A secret token to fetch private playlists/tracks
        explode: true
        in: query
        name: secret_token
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns tracks under a playlist.
      tags:
      - playlists
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--playlists-playlist_id-tracks
      x-accepts: application/json; charset=utf-8
  /playlists/{playlist_id}/reposters:
    get:
      operationId: Playlists_listReposters
      parameters:
      - description: SoundCloud playlist id
        example: 1212781357
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1212781357
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a collection of playlist's reposters.
      tags:
      - playlists
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--playlists-playlist_id-reposters
      x-accepts: application/json
  /tracks/{track_id}:
    delete:
      operationId: Tracks_deleteTrack
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      responses:
        "200":
          description: Success
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Deletes a track.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--tracks-track_id
      x-accepts: application/json
    get:
      operationId: Tracks_getById
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      - description: A secret token to fetch private playlists/tracks
        explode: true
        in: query
        name: secret_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Track'
              schema:
                $ref: '#/components/schemas/Track'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a track.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks-track_id
      x-accepts: application/json
    put:
      operationId: Tracks_updateTrackInformation
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackMetadataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackDataRequest'
          multipart/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackDataRequest'
        description: Track payload
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Track'
              schema:
                $ref: '#/components/schemas/Track'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Updates a track's information.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--tracks-track_id
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /tracks/{track_id}/streams:
    get:
      operationId: Tracks_getStreamableUrls
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      - description: A secret token to fetch private playlists/tracks
        explode: true
        in: query
        name: secret_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Streams'
              schema:
                $ref: '#/components/schemas/Streams'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a track's streamable URLs
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks-track_id-streams
      x-accepts: application/json
  /tracks/{track_id}/comments:
    get:
      operationId: Tracks_getComments
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Comments'
              schema:
                $ref: '#/components/schemas/Comments'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns the comments posted on the track(track_id).
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks-track_id-comments
      x-accepts: application/json
    post:
      operationId: Tracks_createComment
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TracksCreateCommentRequest'
        description: |
          Body of a comment
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Comment'
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
        "422":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/UnprocessableEntity'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
          x-do-not-generate: true
        "429":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/TooManyRequests'
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns the newly created comment on success
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--tracks-track_id-comments
      x-content-type: application/json; charset=utf-8
      x-accepts: application/json
  /tracks/{track_id}/favoriters:
    get:
      operationId: Tracks_getFavoriters
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of users who have favorited or liked the track.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks-track_id-favoriters
      x-accepts: application/json
  /tracks/{track_id}/reposters:
    get:
      operationId: Tracks_listReposters
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a collection of track's reposters.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks-track_id-reposters
      x-accepts: application/json
  /tracks/{track_id}/related:
    get:
      operationId: Tracks_getRelatedTracks
      parameters:
      - description: SoundCloud Track id
        example: 308946187
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 308946187
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - deprecated: true
        description: "Offset of first result. Deprecated, use `linked_partitioning`\
          \ instead."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        style: form
        x-konfig-original-example: 0
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns all related tracks of track on SoundCloud.
      tags:
      - tracks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tracks-track_id-related
      x-accepts: application/json
  /resolve:
    get:
      operationId: Miscellaneous_resolveSoundcloudUrls
      parameters:
      - description: SoundCloud URL
        example: https://soundcloud.com/user-434241656
        explode: true
        in: query
        name: url
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: https://soundcloud.com/user-434241656
      responses:
        "200":
          description: OK
        "302":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Found'
          description: Found
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Resolves soundcloud.com and on.soundcloud.com URLs to Resource URLs
        to use with the API.
      tags:
      - miscellaneous
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--resolve
      x-accepts: application/json
  /users/{user_id}:
    get:
      operationId: Users_getUser
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/User'
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a user.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id
      x-accepts: application/json
  /users/{user_id}/favorites:
    get:
      deprecated: true
      operationId: Users_listFavorites
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: "Returns a list of user's favorited or liked tracks. (use /users/:userId/likes/tracks\
        \ instead, to fetch a user's likes)"
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-favorites
      x-accepts: application/json; charset=utf-8
  /users/{user_id}/followers:
    get:
      description: Returns a list of users that follows (user_id).
      operationId: Users_getFollowers
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user’s followers.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-followers
      x-accepts: application/json; charset=utf-8
  /users/{user_id}/followings:
    get:
      description: Returns list of users that (user_id) follows.
      operationId: Users_getUserFollowings
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Users'
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user’s followings.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-followings
      x-accepts: application/json; charset=utf-8
  /users/{user_id}/followings/{following_id}:
    get:
      deprecated: true
      description: Returns (following_id) that is followed by (user_id).
      operationId: Users_getFollowingById
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: SoundCloud User id to denote a Following of a user
        example: 25219981
        explode: false
        in: path
        name: following_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 25219981
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/User'
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: "Returns a user's following. (use /users/{user_id} instead, to fetch\
        \ the user details)"
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-followings-following_id
      x-accepts: application/json
  /users/{user_id}/playlists:
    get:
      operationId: Users_getUserPlaylists
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: A boolean flag to request a playlist with or without tracks.
          Default is `true`.
        example: true
        explode: true
        in: query
        name: show_tracks
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlists'
                playlistsArray:
                  $ref: '#/components/examples/PlaylistsArray'
              schema:
                $ref: '#/components/schemas/MeGetLikedPlaylistsResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user's playlists.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-playlists
      x-accepts: application/json; charset=utf-8
  /users/{user_id}/tracks:
    get:
      operationId: Users_getUserTracks
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user's tracks.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-tracks
      x-accepts: application/json; charset=utf-8
  /users/{user_id}/web-profiles:
    get:
      operationId: Users_getUserWebProfiles
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/WebProfiles'
              schema:
                $ref: '#/components/schemas/WebProfiles'
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: "Returns list of user's links added to their profile (website, facebook,\
        \ instagram)."
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-web-profiles
      x-accepts: application/json; charset=utf-8
  /users/{user_id}/likes/tracks:
    get:
      operationId: Users_listLikedTracks
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: |
          Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
        explode: false
        in: query
        name: access
        required: false
        schema:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        style: form
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Tracks'
                tracksList:
                  $ref: '#/components/examples/TracksList'
              schema:
                $ref: '#/components/schemas/MeListLikedTracksResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user's liked tracks.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-likes-tracks
      x-accepts: application/json
  /users/{user_id}/likes/playlists:
    get:
      operationId: Users_listLikedPlaylists
      parameters:
      - description: SoundCloud User id
        example: 948745750
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 948745750
      - description: Number of results to return in the collection.
        example: 2
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        style: form
        x-konfig-original-example: 2
      - description: "Returns paginated collection of items (recommended, returning\
          \ a list without pagination is deprecated and should not be used)"
        example: true
        explode: true
        in: query
        name: linked_partitioning
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Playlists'
                playlistsArray:
                  $ref: '#/components/examples/PlaylistsArray'
              schema:
                $ref: '#/components/schemas/MeGetLikedPlaylistsResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Returns a list of user's liked playlists.
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-user_id-likes-playlists
      x-accepts: application/json
  /likes/tracks/{track_id}:
    delete:
      operationId: Likes_unlikeTrack
      parameters:
      - description: SoundCloud Track id
        example: 1015448728
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1015448728
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Success'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Unlikes a track.
      tags:
      - likes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--likes-tracks-track_id
      x-accepts: application/json
    post:
      operationId: Likes_trackAction
      parameters:
      - description: SoundCloud Track id
        example: 1015448728
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1015448728
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Success'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
        "429":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/TooManyRequests'
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Likes a track.
      tags:
      - likes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--likes-tracks-track_id
      x-accepts: application/json
  /likes/playlists/{playlist_id}:
    delete:
      operationId: Likes_unlikePlaylist
      parameters:
      - description: SoundCloud playlist id
        example: 1212781357
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1212781357
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Success'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Unlikes a playlist.
      tags:
      - likes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--likes-playlists-playlist_id
      x-accepts: application/json
    post:
      operationId: Likes_playlist
      parameters:
      - description: SoundCloud playlist id
        example: 1212781357
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1212781357
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Success'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/BadRequest'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
        "429":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/TooManyRequests'
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Likes a playlist.
      tags:
      - likes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--likes-playlists-playlist_id
      x-accepts: application/json
  /reposts/tracks/{track_id}:
    delete:
      operationId: Reposts_removeRepost
      parameters:
      - description: SoundCloud Track id
        example: 1015448728
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1015448728
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Removes a repost on a track as the authenticated user
      tags:
      - reposts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--reposts-tracks-track_id
      x-accepts: application/json
    post:
      operationId: Reposts_trackAsAuthenticatedUser
      parameters:
      - description: SoundCloud Track id
        example: 1015448728
        explode: false
        in: path
        name: track_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1015448728
      responses:
        "201":
          description: Created
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Reposts a track as the authenticated user
      tags:
      - reposts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--reposts-tracks-track_id
      x-accepts: application/json
  /reposts/playlists/{playlist_id}:
    delete:
      operationId: Reposts_removeRepostOnPlaylist
      parameters:
      - description: SoundCloud playlist id
        example: 1205584273
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1205584273
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Removes a repost on a playlist as the authenticated user
      tags:
      - reposts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--reposts-playlists-playlist_id
      x-accepts: application/json
    post:
      operationId: Reposts_playlistAsAuthenticatedUser
      parameters:
      - description: SoundCloud playlist id
        example: 1205584273
        explode: false
        in: path
        name: playlist_id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 1205584273
      responses:
        "201":
          description: Created
        "401":
          content:
            application/json; charset=utf-8:
              examples:
                default:
                  $ref: '#/components/examples/Unauthorized'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          x-do-not-generate: true
      security:
      - AuthHeader: []
      summary: Reposts a playlist as the authenticated user
      tags:
      - reposts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--reposts-playlists-playlist_id
      x-accepts: application/json
components:
  examples:
    Activities:
      value:
        collection:
        - type: track:repost
          created_at: 2020/10/12 12:02:44 +0000
          origin:
            $ref: '#/components/examples/Track/value'
        - type: playlist
          created_at: 2020/10/12 12:02:44 +0000
          origin:
            $ref: '#/components/examples/Playlist/value'
        next_href: https://api.soundcloud.com/me/activities?limit=10&cursor=00000
        future_href: https://api.soundcloud.com/me/activities?limit=10&cursor=000001
    ExpiringToken:
      value:
        access_token: some string
        expires_in: 3599
        scope: ""
        refresh_token: some string
        token_type: bearer
    CreateUpdatePlaylistRequest:
      value:
        playlist:
          title: Test Auto-created Playlist
          description: Playlist for test purposes
          sharing: private
          tracks:
          - id: 219787221
          - id: 783019264
          - id: 870073492
    CreateUpdatePlaylistFormRequest:
      value:
        playlist[title]: Test drum sample
        playlist[sharing]: private
        playlist[description]: Public-api test sample upload
    TrackDataRequest:
      value:
        track[title]: Test drum sample
        track[asset_data]: <binary string>
        track[permalink]: test-drum-sample
        track[sharing]: private
        track[embeddable_by]: me
        track[purchase_url]: null
        track[description]: Public-api test sample upload
        track[genre]: Pop
        track[tag_list]: null
        track[label_name]: null
        track[release]: null
        track[release_date]: 2021-02-18T00:00:00.000Z
        track[streamable]: true
        track[downloadable]: false
        track[license]: no-rights-reserved
        track[commentable]: true
        track[isrc]: null
        track[artwork_data]: null
    Comment:
      value:
        body: comment body
        created_at: 2007/09/11 15:40:24 +0000
        id: 1234
        kind: comment
        timestamp: 4960
        track_id: 123456
        uri: https://api.soundcloud.com/comments/1234
        user:
          id: 12345
          kind: user
          permalink: permalink
          username: user name
          last_modified: 2017/04/10 14:48:03 +0000
          uri: https://api.soundcloud.com/users/12345
          permalink_url: https://soundcloud.com/permalink
          avatar_url: https://i1.sndcdn.com/avatars-large.jpg
          followers_count: 138
          followings_count: 172
          public_favorites_count: 5
          reposts_count: 0
        user_id: 12345
    Comments:
      value:
        collection:
          $ref: '#/components/examples/Comment/value'
        next_href: https://api.soundcloud.com/collection?page_size=10&cursor=1234567
    Playlist:
      value:
        tags: ""
        title: permalink
        description: null
        artwork_url: ""
        created_at: 2020/07/16 16:09:54 +0000
        downloadable: true
        duration: 11000
        ean: null
        embeddable_by: all
        genre: ""
        id: 12345
        kind: playlist
        label: null
        label_id: null
        label_name: null
        last_modified: 2020/09/08 09:13:00 +0000
        license: all-rights-reserved
        likes_count: 0
        permalink: permalink
        permalink_url: https://soundcloud.com/userPermalink/sets/permalink
        playlist_type: ""
        purchase_title: null
        purchase_url: null
        release: null
        release_day: null
        release_month: null
        release_year: null
        sharing: public
        streamable: true
        tag_list: ""
        track_count: 2
        tracks:
          $ref: '#/components/examples/Track/value'
        tracks_uri: https://api.soundcloud.com/playlists/12345/tracks
        type: ""
        uri: https://api.soundcloud.com/playlists/12345
        user:
          $ref: '#/components/examples/User/value'
        user_id: 1234
    Playlists:
      value:
        collection:
          $ref: '#/components/examples/Playlist/value'
        next_href: https://api.soundcloud.com/collection?page_size=10&cursor=1234567
    PlaylistsArray:
      description: "Deprecated, use Playlists instead."
      value:
        $ref: '#/components/examples/Playlist/value'
    Streams:
      value:
        http_mp3_128_url: https://cf-media.sndcdn.com/
        hls_mp3_128_url: https://cf-media.sndcdn.com/
        hls_opus_64_url: https://cf-media.sndcdn.com/
        preview_mp3_128_url: https://cf-media.sndcdn.com/
    Track:
      value:
        title: Some title
        description: null
        artwork_url: https://i1.sndcdn.com/artworks-large.jpg
        available_country_codes: null
        bpm: null
        comment_count: 4
        commentable: true
        created_at: 2019/01/15 15:40:49 +0000
        download_count: 0
        download_url: https://api.soundcloud.com/tracks/1234/download
        downloadable: false
        duration: 40000
        embeddable_by: all
        favoritings_count: 271
        genre: Rock
        id: 1234
        isrc: null
        key_signature: null
        kind: track
        label_name: some label
        license: all-rights-reserved
        permalink_url: https://soundcloud.com/userPermalink/trackPermalink
        playback_count: 8027
        purchase_title: null
        purchase_url: null
        release: null
        release_day: 22
        release_month: 8
        release_year: 2019
        reposts_count: 18
        secret_uri: null
        sharing: public
        stream_url: https://api.soundcloud.com/tracks/1234/stream
        streamable: true
        tag_list: ""
        uri: https://api.soundcloud.com/tracks/1234
        user:
          $ref: '#/components/examples/User/value'
        user_favorite: true
        user_playback_count: 1
        waveform_url: https://wave.sndcdn.com/someString.png
        access: playable
    Tracks:
      value:
        collection:
          $ref: '#/components/examples/Track/value'
        next_href: https://api.soundcloud.com/collection?page_size=10&cursor=1234567
    TracksList:
      description: "Deprecated, use Tracks instead."
      value:
        $ref: '#/components/examples/Track/value'
    User:
      value:
        description: null
        avatar_url: https://i1.sndcdn.com/avatars.jpg
        city: City
        country: Country
        created_at: 2018/01/01 12:08:25 +0000
        discogs_name: null
        first_name: First_name
        followers_count: 0
        followings_count: 0
        full_name: Full Name
        id: 12345
        kind: user
        last_modified: 2020/01/03 12:08:25 +0000
        last_name: Last_name
        myspace_name: null
        permalink: permalink
        permalink_url: https://soundcloud.com/permalink
        plan: Free
        playlist_count: 3
        public_favorites_count: 20
        reposts_count: 0
        subscriptions:
        - product:
            id: some-id
            name: some.name
        track_count: 0
        upload_seconds_left: 10800
        uri: https://api.soundcloud.com/users/1234
        username: some.user
        website: null
        website_title: null
    Users:
      value:
        collection:
          $ref: '#/components/examples/User/value'
        next_href: https://api.soundcloud.com/collection?page_size=10&cursor=1234567
    WebProfiles:
      value:
      - title: my facebook
        created_at: 1995/10/20 12:10:39 +0000
        id: 1234
        kind: web-profile
        service: facebook
        url: http://facebook.com
        username: username
    Success:
      value:
        status: 200 - OK
    Successful:
      value:
        status: 200 - Successful
    Accepted:
      value:
        status: 202 - Accepted
    Created:
      value:
        status: 201 - Created
    ErrorUnsupportedGrant:
      value:
        code: 400
        message: unsupported_grant
        link: https://developers.soundcloud.com/docs/api/guide#authentication
    BadRequest:
      value:
        code: 400
        message: "Detailed message of errors, when available"
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
    ErrorInvalidGrant:
      value:
        code: 400
        message: invalid_grant
        link: https://developers.soundcloud.com/docs/api/guide#authentication
    Unauthorized:
      value:
        code: 401
        message: "Detailed message of errors, when available"
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
    ErrorInvalidScope:
      value:
        code: 401
        message: invalid_scope
        link: https://developers.soundcloud.com/docs/api/guide#authentication
    ErrorInvalidClient:
      value:
        code: 401
        message: invalid_client
        link: https://developers.soundcloud.com/docs/api/guide#authentication
    Forbidden:
      value:
        code: 403
        message: "Detailed message of errors, when available"
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
    NotFound:
      value:
        code: 404
        message: "Detailed message of errors, when available"
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
    UnprocessableEntity:
      value:
        code: 422
        message: "Detailed message of errors, when available"
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
    TooManyRequests:
      value:
        code: 429
        message: "Detailed message of errors, when available"
        spam_warning_urn: soundcloud:spam-warnings:1
        link: https://developers.soundcloud.com/docs/api/rate-limits#errors
    OK:
      value:
        status: Status(200) - OK
    TrackMetadataRequest:
      value:
        track[title]: Updated Test Track
  parameters:
    tags:
      description: A comma separated list of tags
      example: test
      explode: true
      in: query
      name: tags
      required: false
      schema:
        type: string
      style: form
      x-konfig-original-example: test
    bpm:
      description: "Return tracks with a specified bpm[from], bpm[to]"
      explode: false
      in: query
      name: bpm
      required: false
      schema:
        $ref: '#/components/schemas/Search_byQuery_bpm_parameter'
      style: deepObject
    client_id:
      description: The client id belonging to your application
      example: some client
      explode: true
      in: query
      name: client_id
      required: true
      schema:
        type: string
      style: form
      x-konfig-original-example: some client
    created_at:
      description: (yyyy-mm-dd hh:mm:ss) return tracks created within the specified
        dates
      explode: false
      in: query
      name: created_at
      required: false
      schema:
        $ref: '#/components/schemas/Search_byQuery_created_at_parameter'
      style: deepObject
    duration:
      description: Return tracks within a specified duration range
      explode: false
      in: query
      name: duration
      required: false
      schema:
        $ref: '#/components/schemas/Search_byQuery_duration_parameter'
      style: deepObject
    genres:
      description: A comma separated list of genres
      example: "Pop,House"
      explode: true
      in: query
      name: genres
      required: false
      schema:
        type: string
      style: form
      x-konfig-original-example: "Pop,House"
    ids:
      description: A comma separated list of track ids to filter on
      example: "1,2,3"
      explode: true
      in: query
      name: ids
      required: false
      schema:
        type: string
      style: form
      x-konfig-original-example: "1,2,3"
    limit:
      description: Number of results to return in the collection.
      example: 2
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 50
        example: 50
        maximum: 200
        minimum: 1
        type: integer
        x-konfig-original-example: 50
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      style: form
      x-konfig-original-example: 2
    offset:
      deprecated: true
      description: "Offset of first result. Deprecated, use `linked_partitioning`\
        \ instead."
      example: 0
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        example: 0
        type: integer
        x-konfig-original-example: 0
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
      style: form
      x-konfig-original-example: 0
    q:
      description: search
      example: hello
      explode: true
      in: query
      name: q
      required: false
      schema:
        type: string
      style: form
      x-konfig-original-example: hello
    redirect_uri:
      description: The redirect uri you have configured for your application
      example: https://soundcloud.com
      explode: true
      in: query
      name: redirect_uri
      required: true
      schema:
        type: string
      style: form
      x-konfig-original-example: https://soundcloud.com
    response_type:
      description: Support only the Authorization Code Flow
      example: code
      explode: true
      in: query
      name: response_type
      required: true
      schema:
        enum:
        - code
        type: string
      style: form
      x-konfig-original-example: code
    scope:
      description: Scope. Leave blank by default
      example: default
      explode: true
      in: query
      name: scope
      required: true
      schema:
        type: string
      style: form
      x-konfig-original-example: default
    state:
      description: Any value included here will be appended to the redirect URI. Use
        this for CSRF protection.
      example: encrypted_session_info
      explode: true
      in: query
      name: state
      required: false
      schema:
        type: string
      style: form
      x-konfig-original-example: encrypted_session_info
    url:
      description: SoundCloud URL
      example: https://soundcloud.com/user-434241656
      explode: true
      in: query
      name: url
      required: true
      schema:
        type: string
      style: form
      x-konfig-original-example: https://soundcloud.com/user-434241656
    linked_partitioning:
      description: "Returns paginated collection of items (recommended, returning\
        \ a list without pagination is deprecated and should not be used)"
      example: true
      explode: true
      in: query
      name: linked_partitioning
      required: false
      schema:
        type: boolean
      style: form
      x-konfig-original-example: true
    secret_token:
      description: A secret token to fetch private playlists/tracks
      explode: true
      in: query
      name: secret_token
      required: false
      schema:
        type: string
      style: form
    access:
      description: |
        Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
      explode: false
      in: query
      name: access
      required: false
      schema:
        example: "playable,preview"
        items:
          enum:
          - playable
          - preview
          - blocked
          type: string
        type: array
        x-konfig-original-example: "playable,preview"
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
      style: form
    access_explicit:
      description: |
        Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
      explode: false
      in: query
      name: access
      required: false
      schema:
        example: "playable,preview,blocked"
        items:
          enum:
          - playable
          - preview
          - blocked
          type: string
        type: array
        x-konfig-original-example: "playable,preview,blocked"
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-access_explicit-schema
      style: form
    show_tracks:
      description: A boolean flag to request a playlist with or without tracks. Default
        is `true`.
      example: true
      explode: true
      in: query
      name: show_tracks
      required: false
      schema:
        type: boolean
      style: form
      x-konfig-original-example: true
    comment_id:
      description: SoundCloud comment id
      example: 123456
      explode: false
      in: path
      name: comment_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 123456
    follower_id:
      description: SoundCloud User id to denote a Follower
      example: 743372812
      explode: false
      in: path
      name: follower_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 743372812
    following_id:
      description: SoundCloud User id to denote a Following of a user
      example: 25219981
      explode: false
      in: path
      name: following_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 25219981
    playlist_id:
      description: SoundCloud playlist id
      example: 1212781357
      explode: false
      in: path
      name: playlist_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 1212781357
    fake_playlist_id:
      description: SoundCloud playlist id
      example: 10
      explode: false
      in: path
      name: playlist_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 10
    repost_playlist_id:
      description: SoundCloud playlist id
      example: 1205584273
      explode: false
      in: path
      name: playlist_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 1205584273
    tag:
      description: tag
      example: some tag
      explode: false
      in: path
      name: tag
      required: true
      schema:
        type: string
      style: simple
      x-konfig-original-example: some tag
    track_id:
      description: SoundCloud Track id
      example: 308946187
      explode: false
      in: path
      name: track_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 308946187
    test_track_id:
      description: SoundCloud Track id
      example: 1015448728
      explode: false
      in: path
      name: track_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 1015448728
    user_id:
      description: SoundCloud User id
      example: 948745750
      explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 948745750
    user_id_to_follow:
      description: SoundCloud User id
      example: 743372812
      explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: integer
      style: simple
      x-konfig-original-example: 743372812
  responses:
    Success:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Success'
      description: Success
    Successful:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Successful'
      description: Success
    Accepted:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Accepted'
      description: Accepted
    Found:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Found'
      description: Found
      x-do-not-generate: true
    FoundHtml:
      content:
        application/json; charset=utf-8:
          schema:
            type: string
      description: Found
    Created:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Created'
      description: Created
    BadRequest:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/BadRequest'
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
      x-do-not-generate: true
    Unauthorized:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Unauthorized'
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
      x-do-not-generate: true
    Forbidden:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/Forbidden'
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    NotFound:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/NotFound'
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
      x-do-not-generate: true
    UnprocessableEntity:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/UnprocessableEntity'
          schema:
            $ref: '#/components/schemas/Error'
      description: Unprocessable Entity
      x-do-not-generate: true
    TooManyRequests:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/TooManyRequests'
          schema:
            $ref: '#/components/schemas/TooManyRequests'
      description: Too Many Requests
      x-do-not-generate: true
    User:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/User'
          schema:
            $ref: '#/components/schemas/User'
      description: Success
    Me:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Me'
      description: Success
    Users:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Users'
          schema:
            $ref: '#/components/schemas/Users'
      description: Success
    Track:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Track'
          schema:
            $ref: '#/components/schemas/Track'
      description: Success
    Tracks:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Tracks'
            tracksList:
              $ref: '#/components/examples/TracksList'
          schema:
            $ref: '#/components/schemas/MeListLikedTracksResponse'
      description: Success
    TracksList:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/TracksList'
          schema:
            $ref: '#/components/schemas/TracksList'
      description: Success
    Playlist:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Playlist'
          schema:
            $ref: '#/components/schemas/Playlist'
      description: Success
    Playlists:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Playlists'
            playlistsArray:
              $ref: '#/components/examples/PlaylistsArray'
          schema:
            $ref: '#/components/schemas/MeGetLikedPlaylistsResponse'
      description: Success
    Activities:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Activities'
          schema:
            $ref: '#/components/schemas/Activities'
      description: Success
    WebProfiles:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/WebProfiles'
          schema:
            $ref: '#/components/schemas/WebProfiles'
      description: Success
    Comment:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Comment'
          schema:
            $ref: '#/components/schemas/Comment'
      description: Success
    Comments:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Comments'
          schema:
            $ref: '#/components/schemas/Comments'
      description: Success
    Streams:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: '#/components/examples/Streams'
          schema:
            $ref: '#/components/schemas/Streams'
      description: Success
  schemas:
    OAuthToken:
      properties:
        grant_type:
          description: "One of `authorization_code`, `client_credentials`, `refresh_token`"
          enum:
          - authorization_code
          - refresh_token
          - client_credentials
          example: authorization_code
          type: string
          x-konfig-original-example: authorization_code
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-grant_type
        client_id:
          description: Client ID
          example: CLIENT_ID
          type: string
          x-konfig-original-example: CLIENT_ID
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-client_id
        client_secret:
          description: Client secret
          example: CLIENT_SECRET
          type: string
          x-konfig-original-example: CLIENT_SECRET
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-client_secret
        code:
          description: Authorization code. Required on `grant_type = authorization_code`.
          example: 1-123456-12345678-FAbcfbe9ir2wdj0
          type: string
          x-konfig-original-example: 1-123456-12345678-FAbcfbe9ir2wdj0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-code
        redirect_uri:
          description: Redirect URI. Required on `grant_type = (authorization_code|refresh_token)`.
          example: https://mywebsite/auth/soundcloud
          type: string
          x-konfig-original-example: https://mywebsite/auth/soundcloud
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-redirect_uri
        refresh_token:
          description: Refresh token. Required on `grant_type = refresh_token`.
          example: 1234c331329477150e7b6056ff212345
          type: string
          x-konfig-original-example: 1234c331329477150e7b6056ff212345
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-refresh_token
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
    TrackMetadataRequest:
      example:
        track:
          downloadable: true
          release: release
          purchase_url: purchase_url
          description: description
          isrc: isrc
          title: title
          sharing: public
          license: no-rights-reserved
          embeddable_by: all
          release_date: release_date
          streamable: true
          tag_list: tag_list
          genre: genre
          permalink: permalink
          label_name: label_name
          commentable: true
      properties:
        track:
          $ref: '#/components/schemas/TrackMetadataRequest_track'
      type: object
    CreateUpdatePlaylistRequest:
      example:
        playlist:
          release: release
          purchase_url: purchase_url
          set_type: album
          description: description
          title: title
          sharing: public
          tracks:
          - id: id
          - id: id
          license: license
          artwork_data: ""
          purchase_title: purchase_title
          ean: ean
          release_date: release_date
          tag_list: tag_list
          genre: genre
          permalink: permalink
          permalink_url: permalink_url
          label_name: label_name
      properties:
        playlist:
          $ref: '#/components/schemas/CreateUpdatePlaylistRequest_playlist'
      type: object
    CreateUpdatePlaylistFormRequest:
      properties:
        playlist[title]:
          type: string
        playlist[sharing]:
          default: public
          enum:
          - public
          - private
          example: public
          type: string
          x-konfig-original-example: public
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-CreateUpdatePlaylistFormRequest-properties-playlist[sharing]"
        playlist[description]:
          type: string
        playlist[tracks][][id]:
          description: "To pass multiple tracks, pass multiple comma-separated values,\
            \ e.g. -F \"playlist[tracks][][id]=111,222\""
          type: string
        playlist[artwork_data]:
          format: binary
          title: "The playlist artwork in binary format. Supported formats are gif,\
            \ jpeg and png"
          type: string
        playlist[ean]:
          type: string
        playlist[genre]:
          type: string
        playlist[label_name]:
          type: string
        playlist[license]:
          type: string
        playlist[permalink]:
          type: string
        playlist[permalink_url]:
          type: string
        playlist[purchase_title]:
          type: string
        playlist[purchase_url]:
          type: string
        playlist[release]:
          type: string
        playlist[release_date]:
          type: string
        playlist[set_type]:
          enum:
          - album
          - playlist
          type: string
        playlist[tag_list]:
          type: string
      type: object
    TrackDataRequest:
      properties:
        track[title]:
          type: string
        track[asset_data]:
          format: binary
          title: Only for uploading
          type: string
        track[permalink]:
          type: string
        track[sharing]:
          default: public
          enum:
          - public
          - private
          example: public
          type: string
          x-konfig-original-example: public
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[sharing]"
        track[embeddable_by]:
          description: "who can embed this track \"all\", \"me\", or \"none\""
          enum:
          - all
          - me
          - none
          type: string
        track[purchase_url]:
          type: string
        track[description]:
          type: string
        track[genre]:
          type: string
        track[tag_list]:
          description: "The tag_list property contains a list of tags separated by\
            \ spaces. Multiword tags are quoted in double quotes. We also support\
            \ machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example:\
            \ geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags\
            \ are not revealed to the user on the track pages."
          type: string
        track[label_name]:
          type: string
        track[release]:
          type: string
        track[release_date]:
          description: "string, formatted as yyyy-mm-dd, representing release date"
          title: write only!
          type: string
        track[streamable]:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[streamable]"
        track[downloadable]:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[downloadable]"
        track[license]:
          description: "Possible values: no-rights-reserved, all-rights-reserved,\
            \ cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"
          enum:
          - no-rights-reserved
          - all-rights-reserved
          - cc-by
          - cc-by-nc
          - cc-by-nd
          - cc-by-sa
          - cc-by-nc-nd
          - cc-by-nc-sa
          type: string
        track[commentable]:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[commentable]"
        track[isrc]:
          type: string
        track[artwork_data]:
          format: binary
          title: "Only for uploading, for PRO users"
          type: string
      type: object
    Found:
      properties:
        status:
          description: Status code.
          type: string
        location:
          description: Location URL of the resource.
          type: string
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    Error:
      properties:
        code:
          type: integer
        message:
          type: string
        link:
          type: string
        error:
          deprecated: true
          nullable: true
          type: string
        errors:
          deprecated: true
          items:
            type: string
          type: array
        status:
          deprecated: true
          type: string
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    TooManyRequests:
      allOf:
      - $ref: '#/components/schemas/Error'
      - $ref: '#/components/schemas/TooManyRequests_allOf'
      x-konfig-is-used-in-non-successful-response: true
    User:
      description: SoundCloud User object
      example:
        country: country
        subscriptions:
        - product:
            name: name
            id: id
          recurring: true
        - product:
            name: name
            id: id
          recurring: true
        city: city
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        track_count: 7
        discogs_name: discogs_name
        public_favorites_count: 5
        id: 1
        reposts_count: 2
        myspace_name: myspace_name
        website_title: website_title
        first_name: first_name
        last_modified: 2000-01-23T04:56:07.000+00:00
        plan: plan
        playlist_count: 5
        website: website
        kind: kind
        last_name: last_name
        followings_count: 6
        uri: uri
        full_name: full_name
        avatar_url: avatar_url
        followers_count: 0
        permalink: permalink
        permalink_url: permalink_url
        username: username
      nullable: true
      properties:
        description:
          description: description
          type: string
        avatar_url:
          description: URL to a JPEG image
          type: string
        city:
          description: city
          type: string
        country:
          description: country
          type: string
        discogs_name:
          description: discogs name
          type: string
        first_name:
          description: first name
          type: string
        followers_count:
          description: number of followers
          type: integer
        followings_count:
          description: number of followed users
          type: integer
        full_name:
          description: first and last name
          type: string
        id:
          description: unique identifier
          type: integer
        kind:
          description: kind of resource
          type: string
        created_at:
          description: profile creation datetime
          format: date-time
          type: string
        last_modified:
          description: last modified datetime
          format: date-time
          type: string
        last_name:
          description: last name
          type: string
        myspace_name:
          deprecated: true
          description: myspace name
          type: string
        permalink:
          description: permalink of the resource
          type: string
        permalink_url:
          description: URL to the SoundCloud.com page
          type: string
        plan:
          description: subscription plan of the user
          type: string
        playlist_count:
          description: number of public playlists
          type: integer
        public_favorites_count:
          description: number of favorited public tracks
          type: integer
        reposts_count:
          description: number of reposts from user
          type: integer
        track_count:
          description: number of public tracks
          type: integer
        uri:
          description: API resource URL
          type: string
        username:
          description: username
          type: string
        website:
          description: a URL to the website
          type: string
        website_title:
          description: a custom title for the website
          type: string
        subscriptions:
          deprecated: true
          description: a list subscriptions associated with the user
          items:
            $ref: '#/components/schemas/User_subscriptions_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    Me:
      description: SoundCloud Me object
      example:
        country: country
        subscriptions:
        - product:
            name: name
            id: id
          recurring: true
        - product:
            name: name
            id: id
          recurring: true
        city: city
        description: description
        created_at: created_at
        locale: locale
        track_count: 1
        discogs_name: discogs_name
        private_playlists_count: 7
        quota:
          unlimited_upload_quota: true
          upload_seconds_left: 4
          upload_seconds_used: 2
        primary_email_confirmed: true
        public_favorites_count: 3
        id: 5
        private_tracks_count: 9
        reposts_count: 7
        myspace_name: myspace_name
        website_title: website_title
        first_name: first_name
        last_modified: last_modified
        plan: plan
        playlist_count: 2
        website: website
        kind: kind
        last_name: last_name
        followings_count: 1
        uri: uri
        likes_count: 5
        upload_seconds_left: 1
        full_name: full_name
        avatar_url: avatar_url
        comments_count: 0
        followers_count: 6
        online: true
        permalink: permalink
        permalink_url: permalink_url
        username: username
      properties:
        description:
          description: description.
          type: string
        avatar_url:
          description: URL to a JPEG image.
          type: string
        city:
          description: city.
          type: string
        comments_count:
          deprecated: true
          description: "comments count. From now on, the field always has a `0` value."
          type: integer
        country:
          description: country.
          type: string
        created_at:
          description: created at date
          type: string
        discogs_name:
          description: discogs name.
          type: string
        first_name:
          description: first name.
          type: string
        followers_count:
          description: number of followers.
          type: integer
        followings_count:
          description: number of followed users.
          type: integer
        full_name:
          description: first and last name.
          type: string
        id:
          description: unique identifier
          type: integer
        kind:
          description: kind of resource.
          type: string
        last_modified:
          description: last modified timestamp.
          type: string
        last_name:
          description: last name.
          type: string
        likes_count:
          description: likes count.
          type: integer
        locale:
          description: locale.
          nullable: true
          type: string
        online:
          description: online.
          type: boolean
        myspace_name:
          deprecated: true
          description: myspace name
          type: string
        permalink:
          description: permalink of the resource.
          type: string
        permalink_url:
          description: URL to the SoundCloud.com page.
          type: string
        plan:
          description: subscription plan of the user.
          type: string
        playlist_count:
          description: number of public playlists.
          type: integer
        primary_email_confirmed:
          description: boolean if email is confirmed.
          type: boolean
        private_playlists_count:
          description: number of private playlists.
          type: integer
        private_tracks_count:
          description: number of private tracks.
          type: integer
        public_favorites_count:
          description: number of favorited public tracks
          type: integer
        quota:
          $ref: '#/components/schemas/Me_quota'
        reposts_count:
          description: number of reposts from user
          type: integer
        subscriptions:
          description: a list subscriptions associated with the user
          items:
            $ref: '#/components/schemas/User_subscriptions_inner'
          type: array
        track_count:
          description: number of public tracks.
          type: integer
        upload_seconds_left:
          description: upload seconds left.
          nullable: true
          type: integer
        uri:
          description: API resource URL.
          type: string
        username:
          description: username
          type: string
        website:
          description: a URL to the website.
          type: string
        website_title:
          description: a custom title for the website.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Users:
      example:
        collection:
        - country: country
          subscriptions:
          - product:
              name: name
              id: id
            recurring: true
          - product:
              name: name
              id: id
            recurring: true
          city: city
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          track_count: 7
          discogs_name: discogs_name
          public_favorites_count: 5
          id: 1
          reposts_count: 2
          myspace_name: myspace_name
          website_title: website_title
          first_name: first_name
          last_modified: 2000-01-23T04:56:07.000+00:00
          plan: plan
          playlist_count: 5
          website: website
          kind: kind
          last_name: last_name
          followings_count: 6
          uri: uri
          full_name: full_name
          avatar_url: avatar_url
          followers_count: 0
          permalink: permalink
          permalink_url: permalink_url
          username: username
        - country: country
          subscriptions:
          - product:
              name: name
              id: id
            recurring: true
          - product:
              name: name
              id: id
            recurring: true
          city: city
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          track_count: 7
          discogs_name: discogs_name
          public_favorites_count: 5
          id: 1
          reposts_count: 2
          myspace_name: myspace_name
          website_title: website_title
          first_name: first_name
          last_modified: 2000-01-23T04:56:07.000+00:00
          plan: plan
          playlist_count: 5
          website: website
          kind: kind
          last_name: last_name
          followings_count: 6
          uri: uri
          full_name: full_name
          avatar_url: avatar_url
          followers_count: 0
          permalink: permalink
          permalink_url: permalink_url
          username: username
        next_href: next_href
      properties:
        collection:
          items:
            $ref: '#/components/schemas/User'
          type: array
        next_href:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Track:
      description: Soundcloud Track object.
      example:
        comment_count: 6
        release: release
        tracks_uri: tracks_uri
        type: type
        streamable: true
        download_url: download_url
        id: 5
        last_modified: last_modified
        favoritings_count: 4
        kind: kind
        purchase_url: purchase_url
        release_year: 8
        playlist_type: playlist_type
        sharing: sharing
        tags: tags
        license: license
        user_favorite: true
        user_id: 1
        waveform_url: waveform_url
        permalink_url: permalink_url
        permalink: permalink
        playback_count: 9
        downloadable: ""
        access: playable
        available_country_codes: available_country_codes
        description: description
        created_at: created_at
        title: title
        track_count: 6
        duration: 1
        artwork_url: artwork_url
        ean: ean
        tag_list: tag_list
        release_month: 6
        genre: genre
        release_day: 9
        reposts_count: 6
        secret_uri: secret_uri
        label_name: label_name
        bpm: 1
        commentable: true
        key_signature: key_signature
        isrc: isrc
        label: null
        uri: uri
        tracks:
        - null
        - null
        download_count: 7
        likes_count: 2
        purchase_title: purchase_title
        embeddable_by: embeddable_by
        user: ""
        user_playback_count: 9
        stream_url: stream_url
        label_id: 3
      properties:
        title:
          description: Track title.
          type: string
        description:
          description: Track description.
          type: string
        artwork_url:
          description: URL to a JPEG image.
          type: string
        bpm:
          description: Tempo.
          type: integer
        comment_count:
          description: Number of comments.
          type: integer
        commentable:
          description: Is commentable.
          type: boolean
        created_at:
          description: Created timestamp.
          type: string
        download_count:
          description: NUmber of downloads.
          type: integer
        downloadable: {}
        duration:
          description: Track duration.
          type: integer
        embeddable_by:
          deprecated: true
          description: Embeddable by.
          type: string
        favoritings_count:
          description: Number of favoritings.
          type: integer
        genre:
          description: Genre
          type: string
        id:
          description: Track identifier.
          type: integer
        isrc:
          description: ISRC code.
          type: string
        key_signature:
          description: Key signature.
          type: string
        kind:
          description: Type of object (track).
          type: string
        label_name:
          description: Label user name.
          type: string
        license:
          description: License
          type: string
        permalink_url:
          description: Permalink URL.
          type: string
        playback_count:
          description: Number of plays.
          type: integer
        purchase_title:
          description: Purchase title.
          type: string
        purchase_url:
          description: Purchase URL.
          type: string
        release:
          description: Release.
          type: string
        release_day:
          description: Day of release.
          type: integer
        release_month:
          description: Month of release.
          type: integer
        release_year:
          description: Year of release.
          type: integer
        sharing:
          description: Type of sharing (public/private).
          type: string
        stream_url:
          description: URL to stream.
          type: string
        streamable:
          description: Is streamable.
          type: boolean
        tag_list:
          description: Tags.
          type: string
        uri:
          description: Track URI.
          type: string
        user: {}
        user_favorite:
          description: Is user's favourite.
          type: boolean
        user_playback_count:
          description: Number of plays by a user.
          type: integer
        waveform_url:
          description: Waveform URL.
          type: string
        available_country_codes:
          description: List of countries where track is available.
          type: string
        access:
          description: |
            Level of access the user (logged in or anonymous) has to the track.
              * `playable` - user is allowed to listen to a full track.
              * `preview` - user is allowed to preview a track, meaning a snippet is available
              * `blocked` - user can only see the metadata of a track, no streaming is possible
          enum:
          - playable
          - preview
          - blocked
          nullable: true
          type: string
        download_url:
          description: URL to download a track.
          type: string
        reposts_count:
          description: Number of reposts.
          type: integer
        secret_uri:
          description: Secret URL.
          type: string
        tags:
          description: Tags.
          nullable: true
          type: string
        ean:
          description: European Article Number.
          type: string
        label_id:
          description: Label user identifier.
          type: integer
        last_modified:
          description: Last modified timestamp.
          type: string
        permalink:
          description: Playlist permalink.
          type: string
        playlist_type:
          description: Type of playlist.
          type: string
        track_count:
          description: Count of tracks.
          type: integer
        tracks:
          description: List of tracks.
          items:
            $ref: '#/components/schemas/Track'
          type: array
        type:
          description: Playlist type.
          type: string
        user_id:
          description: User identifier.
          type: integer
        likes_count:
          description: Count of playlist likes.
          type: integer
        label:
          $ref: '#/components/schemas/Track_label'
        tracks_uri:
          description: tracks URI.
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Tracks:
      properties:
        collection:
          items:
            $ref: '#/components/schemas/Track'
          type: array
        next_href:
          type: string
      type: object
    TracksList:
      deprecated: true
      items:
        $ref: '#/components/schemas/Track'
      type: array
      x-konfig-is-used-in-successful-response: true
    Playlist:
      description: Soundcloud Playlist Object
      example:
        downloadable: true
        release: release
        tracks_uri: tracks_uri
        description: description
        created_at: created_at
        title: title
        type: type
        track_count: 7
        duration: 6
        artwork_url: artwork_url
        ean: ean
        streamable: true
        tag_list: tag_list
        release_month: 5
        genre: genre
        release_day: 5
        id: 0
        label_name: label_name
        last_modified: last_modified
        kind: kind
        purchase_url: purchase_url
        release_year: 2
        playlist_type: playlist_type
        label: null
        sharing: sharing
        uri: uri
        tracks:
        - comment_count: 6
          release: release
          tracks_uri: tracks_uri
          type: type
          streamable: true
          download_url: download_url
          id: 5
          last_modified: last_modified
          favoritings_count: 4
          kind: kind
          purchase_url: purchase_url
          release_year: 8
          playlist_type: playlist_type
          sharing: sharing
          tags: tags
          license: license
          user_favorite: true
          user_id: 1
          waveform_url: waveform_url
          permalink_url: permalink_url
          permalink: permalink
          playback_count: 9
          downloadable: ""
          access: playable
          available_country_codes: available_country_codes
          description: description
          created_at: created_at
          title: title
          track_count: 6
          duration: 1
          artwork_url: artwork_url
          ean: ean
          tag_list: tag_list
          release_month: 6
          genre: genre
          release_day: 9
          reposts_count: 6
          secret_uri: secret_uri
          label_name: label_name
          bpm: 1
          commentable: true
          key_signature: key_signature
          isrc: isrc
          label: null
          uri: uri
          tracks:
          - null
          - null
          download_count: 7
          likes_count: 2
          purchase_title: purchase_title
          embeddable_by: embeddable_by
          user: ""
          user_playback_count: 9
          stream_url: stream_url
          label_id: 3
        - comment_count: 6
          release: release
          tracks_uri: tracks_uri
          type: type
          streamable: true
          download_url: download_url
          id: 5
          last_modified: last_modified
          favoritings_count: 4
          kind: kind
          purchase_url: purchase_url
          release_year: 8
          playlist_type: playlist_type
          sharing: sharing
          tags: tags
          license: license
          user_favorite: true
          user_id: 1
          waveform_url: waveform_url
          permalink_url: permalink_url
          permalink: permalink
          playback_count: 9
          downloadable: ""
          access: playable
          available_country_codes: available_country_codes
          description: description
          created_at: created_at
          title: title
          track_count: 6
          duration: 1
          artwork_url: artwork_url
          ean: ean
          tag_list: tag_list
          release_month: 6
          genre: genre
          release_day: 9
          reposts_count: 6
          secret_uri: secret_uri
          label_name: label_name
          bpm: 1
          commentable: true
          key_signature: key_signature
          isrc: isrc
          label: null
          uri: uri
          tracks:
          - null
          - null
          download_count: 7
          likes_count: 2
          purchase_title: purchase_title
          embeddable_by: embeddable_by
          user: ""
          user_playback_count: 9
          stream_url: stream_url
          label_id: 3
        tags: tags
        likes_count: 3
        license: license
        purchase_title: purchase_title
        embeddable_by: embeddable_by
        user_id: 9
        permalink: permalink
        permalink_url: permalink_url
        user:
          country: country
          subscriptions:
          - product:
              name: name
              id: id
            recurring: true
          - product:
              name: name
              id: id
            recurring: true
          city: city
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          track_count: 7
          discogs_name: discogs_name
          public_favorites_count: 5
          id: 1
          reposts_count: 2
          myspace_name: myspace_name
          website_title: website_title
          first_name: first_name
          last_modified: 2000-01-23T04:56:07.000+00:00
          plan: plan
          playlist_count: 5
          website: website
          kind: kind
          last_name: last_name
          followings_count: 6
          uri: uri
          full_name: full_name
          avatar_url: avatar_url
          followers_count: 0
          permalink: permalink
          permalink_url: permalink_url
          username: username
        label_id: 1
      properties:
        tags:
          description: Tags.
          nullable: true
          type: string
        title:
          description: Playlist title.
          type: string
        description:
          description: Playlist description.
          type: string
        id:
          description: Playlist identifier.
          type: integer
        kind:
          description: Type of Soundcloud object (playlist).
          type: string
        artwork_url:
          description: URL to a JPEG image.
          type: string
        created_at:
          description: Created timestamp.
          type: string
        downloadable:
          description: is downloadable.
          type: boolean
        duration:
          description: Playlist duration.
          type: integer
        ean:
          description: European Article Number.
          type: string
        embeddable_by:
          description: Embeddable by.
          type: string
        genre:
          description: Playlist genre.
          type: string
        label_id:
          description: Label user identifier.
          type: integer
        label_name:
          description: Label name.
          type: string
        last_modified:
          description: Last modified timestamp.
          type: string
        license:
          description: License.
          type: string
        permalink:
          description: Playlist permalink.
          type: string
        permalink_url:
          description: Playlist permalink URL.
          type: string
        playlist_type:
          description: Type of playlist.
          type: string
        purchase_title:
          description: Purchase title.
          type: string
        purchase_url:
          description: Purchase URL.
          type: string
        release:
          description: Release.
          type: string
        release_day:
          description: Day of release.
          type: integer
        release_month:
          description: Month of release.
          type: integer
        release_year:
          description: Year of release.
          type: integer
        sharing:
          description: Type of sharing (private/public).
          type: string
        streamable:
          description: Is streamable.
          type: boolean
        tag_list:
          description: Tags.
          type: string
        track_count:
          description: Count of tracks.
          type: integer
        tracks:
          description: List of tracks.
          items:
            $ref: '#/components/schemas/Track'
          type: array
        type:
          description: Playlist type.
          type: string
        uri:
          description: Playlist URI.
          type: string
        user:
          $ref: '#/components/schemas/User'
        user_id:
          description: User identifier.
          type: integer
        likes_count:
          description: Count of playlist likes.
          type: integer
        label:
          $ref: '#/components/schemas/Track_label'
        tracks_uri:
          description: tracks URI.
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Playlists:
      properties:
        collection:
          items:
            $ref: '#/components/schemas/Playlist'
          type: array
        next_href:
          type: string
      type: object
    PlaylistsArray:
      deprecated: true
      items:
        $ref: '#/components/schemas/Playlist'
      type: array
    Activities:
      description: User's activities.
      example:
        future_href: future_href
        collection:
        - origin:
            comment_count: 6
            release: release
            tracks_uri: tracks_uri
            type: type
            streamable: true
            download_url: download_url
            id: 2
            last_modified: last_modified
            favoritings_count: 5
            kind: kind
            purchase_url: purchase_url
            release_year: 2
            playlist_type: playlist_type
            sharing: sharing
            tags: tags
            license: license
            user_favorite: true
            user_id: 6
            waveform_url: waveform_url
            permalink_url: permalink_url
            permalink: permalink
            playback_count: 7
            downloadable: ""
            access: playable
            available_country_codes: available_country_codes
            description: description
            created_at: created_at
            title: title
            track_count: 1
            duration: 5
            artwork_url: artwork_url
            ean: ean
            tag_list: tag_list
            release_month: 3
            genre: genre
            release_day: 9
            reposts_count: 7
            secret_uri: secret_uri
            label_name: label_name
            bpm: 0
            commentable: true
            key_signature: key_signature
            isrc: isrc
            label: null
            uri: uri
            tracks:
            - comment_count: 6
              release: release
              tracks_uri: tracks_uri
              type: type
              streamable: true
              download_url: download_url
              id: 5
              last_modified: last_modified
              favoritings_count: 4
              kind: kind
              purchase_url: purchase_url
              release_year: 8
              playlist_type: playlist_type
              sharing: sharing
              tags: tags
              license: license
              user_favorite: true
              user_id: 1
              waveform_url: waveform_url
              permalink_url: permalink_url
              permalink: permalink
              playback_count: 9
              downloadable: ""
              access: playable
              available_country_codes: available_country_codes
              description: description
              created_at: created_at
              title: title
              track_count: 6
              duration: 1
              artwork_url: artwork_url
              ean: ean
              tag_list: tag_list
              release_month: 6
              genre: genre
              release_day: 9
              reposts_count: 6
              secret_uri: secret_uri
              label_name: label_name
              bpm: 1
              commentable: true
              key_signature: key_signature
              isrc: isrc
              label: null
              uri: uri
              tracks:
              - null
              - null
              download_count: 7
              likes_count: 2
              purchase_title: purchase_title
              embeddable_by: embeddable_by
              user: ""
              user_playback_count: 9
              stream_url: stream_url
              label_id: 3
            - comment_count: 6
              release: release
              tracks_uri: tracks_uri
              type: type
              streamable: true
              download_url: download_url
              id: 5
              last_modified: last_modified
              favoritings_count: 4
              kind: kind
              purchase_url: purchase_url
              release_year: 8
              playlist_type: playlist_type
              sharing: sharing
              tags: tags
              license: license
              user_favorite: true
              user_id: 1
              waveform_url: waveform_url
              permalink_url: permalink_url
              permalink: permalink
              playback_count: 9
              downloadable: ""
              access: playable
              available_country_codes: available_country_codes
              description: description
              created_at: created_at
              title: title
              track_count: 6
              duration: 1
              artwork_url: artwork_url
              ean: ean
              tag_list: tag_list
              release_month: 6
              genre: genre
              release_day: 9
              reposts_count: 6
              secret_uri: secret_uri
              label_name: label_name
              bpm: 1
              commentable: true
              key_signature: key_signature
              isrc: isrc
              label: null
              uri: uri
              tracks:
              - null
              - null
              download_count: 7
              likes_count: 2
              purchase_title: purchase_title
              embeddable_by: embeddable_by
              user: ""
              user_playback_count: 9
              stream_url: stream_url
              label_id: 3
            download_count: 1
            likes_count: 6
            purchase_title: purchase_title
            embeddable_by: embeddable_by
            user: ""
            user_playback_count: 4
            stream_url: stream_url
            label_id: 1
          created_at: created_at
          type: type
        - origin:
            comment_count: 6
            release: release
            tracks_uri: tracks_uri
            type: type
            streamable: true
            download_url: download_url
            id: 2
            last_modified: last_modified
            favoritings_count: 5
            kind: kind
            purchase_url: purchase_url
            release_year: 2
            playlist_type: playlist_type
            sharing: sharing
            tags: tags
            license: license
            user_favorite: true
            user_id: 6
            waveform_url: waveform_url
            permalink_url: permalink_url
            permalink: permalink
            playback_count: 7
            downloadable: ""
            access: playable
            available_country_codes: available_country_codes
            description: description
            created_at: created_at
            title: title
            track_count: 1
            duration: 5
            artwork_url: artwork_url
            ean: ean
            tag_list: tag_list
            release_month: 3
            genre: genre
            release_day: 9
            reposts_count: 7
            secret_uri: secret_uri
            label_name: label_name
            bpm: 0
            commentable: true
            key_signature: key_signature
            isrc: isrc
            label: null
            uri: uri
            tracks:
            - comment_count: 6
              release: release
              tracks_uri: tracks_uri
              type: type
              streamable: true
              download_url: download_url
              id: 5
              last_modified: last_modified
              favoritings_count: 4
              kind: kind
              purchase_url: purchase_url
              release_year: 8
              playlist_type: playlist_type
              sharing: sharing
              tags: tags
              license: license
              user_favorite: true
              user_id: 1
              waveform_url: waveform_url
              permalink_url: permalink_url
              permalink: permalink
              playback_count: 9
              downloadable: ""
              access: playable
              available_country_codes: available_country_codes
              description: description
              created_at: created_at
              title: title
              track_count: 6
              duration: 1
              artwork_url: artwork_url
              ean: ean
              tag_list: tag_list
              release_month: 6
              genre: genre
              release_day: 9
              reposts_count: 6
              secret_uri: secret_uri
              label_name: label_name
              bpm: 1
              commentable: true
              key_signature: key_signature
              isrc: isrc
              label: null
              uri: uri
              tracks:
              - null
              - null
              download_count: 7
              likes_count: 2
              purchase_title: purchase_title
              embeddable_by: embeddable_by
              user: ""
              user_playback_count: 9
              stream_url: stream_url
              label_id: 3
            - comment_count: 6
              release: release
              tracks_uri: tracks_uri
              type: type
              streamable: true
              download_url: download_url
              id: 5
              last_modified: last_modified
              favoritings_count: 4
              kind: kind
              purchase_url: purchase_url
              release_year: 8
              playlist_type: playlist_type
              sharing: sharing
              tags: tags
              license: license
              user_favorite: true
              user_id: 1
              waveform_url: waveform_url
              permalink_url: permalink_url
              permalink: permalink
              playback_count: 9
              downloadable: ""
              access: playable
              available_country_codes: available_country_codes
              description: description
              created_at: created_at
              title: title
              track_count: 6
              duration: 1
              artwork_url: artwork_url
              ean: ean
              tag_list: tag_list
              release_month: 6
              genre: genre
              release_day: 9
              reposts_count: 6
              secret_uri: secret_uri
              label_name: label_name
              bpm: 1
              commentable: true
              key_signature: key_signature
              isrc: isrc
              label: null
              uri: uri
              tracks:
              - null
              - null
              download_count: 7
              likes_count: 2
              purchase_title: purchase_title
              embeddable_by: embeddable_by
              user: ""
              user_playback_count: 9
              stream_url: stream_url
              label_id: 3
            download_count: 1
            likes_count: 6
            purchase_title: purchase_title
            embeddable_by: embeddable_by
            user: ""
            user_playback_count: 4
            stream_url: stream_url
            label_id: 1
          created_at: created_at
          type: type
        next_href: next_href
      properties:
        collection:
          items:
            $ref: '#/components/schemas/Activities_collection_inner'
          type: array
        next_href:
          type: string
        future_href:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    WebProfiles:
      description: User's links added to their profile
      items:
        $ref: '#/components/schemas/WebProfiles_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    Comment:
      description: User's Comment
      example:
        user_id: 6
        kind: kind
        track_id: 1
        created_at: created_at
        id: 0
        body: body
        uri: uri
        user:
          avatar_url: avatar_url
          kind: kind
          followers_count: 5
          id: 5
          reposts_count: 7
          permalink: permalink
          permalink_url: permalink_url
          last_modified: last_modified
          uri: uri
          followings_count: 2
          username: username
        timestamp: timestamp
      properties:
        body:
          description: Comment body.
          type: string
        created_at:
          description: Created timestamp.
          type: string
        id:
          description: Identifier.
          type: integer
        kind:
          description: Kind (comment).
          type: string
        user_id:
          description: User's identifier.
          type: integer
        timestamp:
          description: Timestamp.
          type: string
        track_id:
          description: Track's identifier.
          type: integer
        uri:
          description: Comment's URL.
          type: string
        user:
          $ref: '#/components/schemas/Comment_user'
      type: object
      x-konfig-is-used-in-successful-response: true
    Comments:
      example:
        collection:
        - user_id: 6
          kind: kind
          track_id: 1
          created_at: created_at
          id: 0
          body: body
          uri: uri
          user:
            avatar_url: avatar_url
            kind: kind
            followers_count: 5
            id: 5
            reposts_count: 7
            permalink: permalink
            permalink_url: permalink_url
            last_modified: last_modified
            uri: uri
            followings_count: 2
            username: username
          timestamp: timestamp
        - user_id: 6
          kind: kind
          track_id: 1
          created_at: created_at
          id: 0
          body: body
          uri: uri
          user:
            avatar_url: avatar_url
            kind: kind
            followers_count: 5
            id: 5
            reposts_count: 7
            permalink: permalink
            permalink_url: permalink_url
            last_modified: last_modified
            uri: uri
            followings_count: 2
            username: username
          timestamp: timestamp
        next_href: next_href
      properties:
        collection:
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        next_href:
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Streams:
      example:
        http_mp3_128_url: http_mp3_128_url
        hls_opus_64_url: hls_opus_64_url
        hls_mp3_128_url: hls_mp3_128_url
        preview_mp3_128_url: preview_mp3_128_url
      properties:
        http_mp3_128_url:
          type: string
        hls_mp3_128_url:
          type: string
        hls_opus_64_url:
          type: string
        preview_mp3_128_url:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    TracksUploadNewTrackRequest:
      allOf:
      - $ref: '#/components/schemas/TrackDataRequest'
      - required:
        - "track[asset_data]"
        - "track[title]"
    TracksUploadNewTrackRequest1:
      allOf:
      - $ref: '#/components/schemas/TrackDataRequest'
      - required:
        - "track[asset_data]"
        - "track[title]"
    PlaylistsCreateNewPlaylistRequest:
      allOf:
      - $ref: '#/components/schemas/CreateUpdatePlaylistFormRequest'
      - required:
        - "playlist[title]"
    TracksCreateCommentRequest:
      example:
        comment:
          body: test comment
          timestamp: ""
      properties:
        comment:
          $ref: '#/components/schemas/TracksCreateCommentRequest_comment'
      type: object
    OauthProvisionAccessTokenResponse: {}
    OauthProvisionAccessToken401Response: {}
    MeListLikedTracksResponse: {}
    MeGetLikedPlaylistsResponse: {}
    konfig-generated-schema-components-parameters-bpm-schema-properties-from:
      example: 123
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-bpm-schema-properties-to:
      example: 456
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-created_at-schema-properties-from:
      example: 2020-12-24 00:00:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-created_at-schema-properties-to:
      example: 2020-12-26 00:00:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-duration-schema-properties-from:
      example: 123456
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-duration-schema-properties-to:
      example: 456789
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-limit-schema:
      example: 50
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-offset-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-access-schema:
      example: "playable,preview"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-access_explicit-schema:
      example: "playable,preview,blocked"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OAuthToken-properties-grant_type:
      example: authorization_code
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OAuthToken-properties-client_id:
      example: CLIENT_ID
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OAuthToken-properties-client_secret:
      example: CLIENT_SECRET
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OAuthToken-properties-code:
      example: 1-123456-12345678-FAbcfbe9ir2wdj0
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OAuthToken-properties-redirect_uri:
      example: https://mywebsite/auth/soundcloud
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OAuthToken-properties-refresh_token:
      example: 1234c331329477150e7b6056ff212345
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-sharing:
      example: public
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-streamable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-downloadable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-commentable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateUpdatePlaylistFormRequest-properties-playlist[sharing]:
      example: public
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[sharing]:
      example: public
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[streamable]:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[downloadable]:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[commentable]:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TracksCreateCommentRequest-properties-comment-properties-body:
      example: test comment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--connect:
      properties:
        client_id:
          type: string
        redirect_uri:
          type: string
        response_type:
          enum:
          - code
          type: string
        state:
          type: string
      required:
      - client_id
      - redirect_uri
      - response_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - client_id
      - redirect_uri
      - response_type
      - state
    konfig-generated-schema-single-parameter-schema-post--oauth2-token:
      properties:
        grant_type:
          description: "One of `authorization_code`, `client_credentials`, `refresh_token`"
          enum:
          - authorization_code
          - refresh_token
          - client_credentials
          example: authorization_code
          type: string
          x-konfig-original-example: authorization_code
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-grant_type
        client_id:
          description: Client ID
          example: CLIENT_ID
          type: string
          x-konfig-original-example: CLIENT_ID
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-client_id
        client_secret:
          description: Client secret
          example: CLIENT_SECRET
          type: string
          x-konfig-original-example: CLIENT_SECRET
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-client_secret
        code:
          description: Authorization code. Required on `grant_type = authorization_code`.
          example: 1-123456-12345678-FAbcfbe9ir2wdj0
          type: string
          x-konfig-original-example: 1-123456-12345678-FAbcfbe9ir2wdj0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-code
        redirect_uri:
          description: Redirect URI. Required on `grant_type = (authorization_code|refresh_token)`.
          example: https://mywebsite/auth/soundcloud
          type: string
          x-konfig-original-example: https://mywebsite/auth/soundcloud
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-redirect_uri
        refresh_token:
          description: Refresh token. Required on `grant_type = refresh_token`.
          example: 1234c331329477150e7b6056ff212345
          type: string
          x-konfig-original-example: 1234c331329477150e7b6056ff212345
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OAuthToken-properties-refresh_token
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--me:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--me-activities:
      properties:
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - access
      - limit
    konfig-generated-schema-single-parameter-schema-get--me-activities-all-own:
      properties:
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - access
      - limit
    konfig-generated-schema-single-parameter-schema-get--me-activities-tracks:
      properties:
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - access
      - limit
    konfig-generated-schema-single-parameter-schema-get--me-likes-tracks:
      properties:
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        access:
          example: "playable,preview,blocked"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview,blocked"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access_explicit-schema
        linked_partitioning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - access
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--me-likes-playlists:
      properties:
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--me-followings:
      properties:
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - offset
    konfig-generated-schema-single-parameter-schema-get--me-followings-tracks:
      properties:
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - access
      - limit
      - offset
    konfig-generated-schema-single-parameter-schema-delete--me-followings-user_id:
      properties:
        user_id:
          type: integer
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
    konfig-generated-schema-single-parameter-schema-get--me-followings-user_id:
      properties:
        user_id:
          type: integer
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
    konfig-generated-schema-single-parameter-schema-put--me-followings-user_id:
      properties:
        user_id:
          type: integer
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
    konfig-generated-schema-single-parameter-schema-get--me-followers:
      properties:
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
    konfig-generated-schema-single-parameter-schema-get--me-followers-follower_id:
      properties:
        follower_id:
          type: integer
      required:
      - follower_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - follower_id
    konfig-generated-schema-single-parameter-schema-get--me-playlists:
      properties:
        show_tracks:
          type: boolean
        linked_partitioning:
          type: boolean
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - show_tracks
      - linked_partitioning
      - limit
    konfig-generated-schema-single-parameter-schema-get--me-tracks:
      properties:
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--tracks:
      properties:
        q:
          type: string
        ids:
          type: string
        genres:
          type: string
        tags:
          type: string
        bpm:
          properties:
            from:
              description: Return tracks with at least this bpm value
              example: 123
              type: integer
              x-konfig-original-example: 123
              x-konfig-generated-schema: konfig-generated-schema-components-parameters-bpm-schema-properties-from
            to:
              description: Return tracks with at most this bpm value
              example: 456
              type: integer
              x-konfig-original-example: 456
              x-konfig-generated-schema: konfig-generated-schema-components-parameters-bpm-schema-properties-to
          type: object
        duration:
          properties:
            from:
              description: Return tracks with at least this duration value
              example: 123456
              type: integer
              x-konfig-original-example: 123456
              x-konfig-generated-schema: konfig-generated-schema-components-parameters-duration-schema-properties-from
            to:
              description: Return tracks with at most this duration value
              example: 456789
              type: integer
              x-konfig-original-example: 456789
              x-konfig-generated-schema: konfig-generated-schema-components-parameters-duration-schema-properties-to
          type: object
        created_at:
          properties:
            from:
              description: (yyyy-mm-dd hh:mm:ss) return tracks created at this date
                or later
              example: 2020-12-24 00:00:00
              type: string
              x-konfig-original-example: 2020-12-24 00:00:00
              x-konfig-generated-schema: konfig-generated-schema-components-parameters-created_at-schema-properties-from
            to:
              description: (yyyy-mm-dd hh:mm:ss) return tracks created at this date
                or earlier
              example: 2020-12-26 00:00:00
              type: string
              x-konfig-original-example: 2020-12-26 00:00:00
              x-konfig-generated-schema: konfig-generated-schema-components-parameters-created_at-schema-properties-to
          type: object
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        linked_partitioning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - ids
      - genres
      - tags
      - bpm
      - duration
      - created_at
      - access
      - limit
      - offset
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-post--tracks:
      properties:
        track[title]:
          type: string
        track[asset_data]:
          format: binary
          title: Only for uploading
          type: string
        track[permalink]:
          type: string
        track[sharing]:
          default: public
          enum:
          - public
          - private
          example: public
          type: string
          x-konfig-original-example: public
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[sharing]"
        track[embeddable_by]:
          description: "who can embed this track \"all\", \"me\", or \"none\""
          enum:
          - all
          - me
          - none
          type: string
        track[purchase_url]:
          type: string
        track[description]:
          type: string
        track[genre]:
          type: string
        track[tag_list]:
          description: "The tag_list property contains a list of tags separated by\
            \ spaces. Multiword tags are quoted in double quotes. We also support\
            \ machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example:\
            \ geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags\
            \ are not revealed to the user on the track pages."
          type: string
        track[label_name]:
          type: string
        track[release]:
          type: string
        track[release_date]:
          description: "string, formatted as yyyy-mm-dd, representing release date"
          title: write only!
          type: string
        track[streamable]:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[streamable]"
        track[downloadable]:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[downloadable]"
        track[license]:
          description: "Possible values: no-rights-reserved, all-rights-reserved,\
            \ cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"
          enum:
          - no-rights-reserved
          - all-rights-reserved
          - cc-by
          - cc-by-nc
          - cc-by-nd
          - cc-by-sa
          - cc-by-nc-nd
          - cc-by-nc-sa
          type: string
        track[commentable]:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: "konfig-generated-schema-components-schemas-TrackDataRequest-properties-track[commentable]"
        track[isrc]:
          type: string
        track[artwork_data]:
          format: binary
          title: "Only for uploading, for PRO users"
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--playlists:
      properties:
        q:
          type: string
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        show_tracks:
          type: boolean
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        linked_partitioning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - access
      - show_tracks
      - limit
      - offset
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-post--playlists:
      properties:
        playlist:
          properties:
            title:
              description: Title of the playlist
              type: string
            description:
              description: Description of the playlist
              type: string
            sharing:
              description: public or private
              enum:
              - public
              - private
              type: string
            tracks:
              description: List of tracks to add to playlist
              items:
                properties:
                  id:
                    description: SoundCloud track id
                    type: string
                required:
                - id
                type: object
              type: array
            artwork_data:
              format: binary
              title: Only for POST
              type: string
            ean:
              description: The European Article Number
              type: string
            genre:
              description: Playlist's genre
              type: string
            label_name:
              description: Label name
              type: string
            license:
              description: License number
              type: string
            permalink:
              description: Playlist's permalink
              type: string
            permalink_url:
              description: Full permalink URL
              type: string
            purchase_title:
              description: Purchase title
              type: string
            purchase_url:
              description: Purchase URL
              type: string
            release:
              description: Playlist's release
              type: string
            release_date:
              description: Release date
              type: string
            set_type:
              description: Playlist or album type
              enum:
              - album
              - playlist
              type: string
            tag_list:
              description: A comma-separated list of tags
              type: string
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--users:
      properties:
        q:
          type: string
        ids:
          type: string
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        linked_partitioning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - ids
      - limit
      - offset
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-delete--playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
    konfig-generated-schema-single-parameter-schema-get--playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
        secret_token:
          type: string
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        show_tracks:
          type: boolean
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
      - secret_token
      - access
      - show_tracks
    konfig-generated-schema-single-parameter-schema-put--playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
        playlist:
          properties:
            title:
              description: Title of the playlist
              type: string
            description:
              description: Description of the playlist
              type: string
            sharing:
              description: public or private
              enum:
              - public
              - private
              type: string
            tracks:
              description: List of tracks to add to playlist
              items:
                properties:
                  id:
                    description: SoundCloud track id
                    type: string
                required:
                - id
                type: object
              type: array
            artwork_data:
              format: binary
              title: Only for POST
              type: string
            ean:
              description: The European Article Number
              type: string
            genre:
              description: Playlist's genre
              type: string
            label_name:
              description: Label name
              type: string
            license:
              description: License number
              type: string
            permalink:
              description: Playlist's permalink
              type: string
            permalink_url:
              description: Full permalink URL
              type: string
            purchase_title:
              description: Purchase title
              type: string
            purchase_url:
              description: Purchase URL
              type: string
            release:
              description: Playlist's release
              type: string
            release_date:
              description: Release date
              type: string
            set_type:
              description: Playlist or album type
              enum:
              - album
              - playlist
              type: string
            tag_list:
              description: A comma-separated list of tags
              type: string
          type: object
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
    konfig-generated-schema-single-parameter-schema-get--playlists-playlist_id-tracks:
      properties:
        playlist_id:
          type: integer
        secret_token:
          type: string
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        linked_partitioning:
          type: boolean
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
      - secret_token
      - access
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--playlists-playlist_id-reposters:
      properties:
        playlist_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
      - limit
    konfig-generated-schema-single-parameter-schema-delete--tracks-track_id:
      properties:
        track_id:
          type: integer
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-get--tracks-track_id:
      properties:
        track_id:
          type: integer
        secret_token:
          type: string
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
      - secret_token
    konfig-generated-schema-single-parameter-schema-put--tracks-track_id:
      properties:
        track_id:
          type: integer
        track:
          properties:
            title:
              type: string
            description:
              type: string
            permalink:
              type: string
            sharing:
              default: public
              enum:
              - public
              - private
              example: public
              type: string
              x-konfig-original-example: public
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-sharing
            embeddable_by:
              description: "who can embed this track \"all\", \"me\", or \"none\""
              enum:
              - all
              - me
              - none
              type: string
            purchase_url:
              type: string
            genre:
              type: string
            tag_list:
              description: "The tag_list property contains a list of tags separated\
                \ by spaces. Multiword tags are quoted in double quotes. We also support\
                \ machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example:\
                \ geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine\
                \ tags are not revealed to the user on the track pages."
              type: string
            label_name:
              type: string
            release:
              type: string
            release_date:
              description: "string, formatted as yyyy-mm-dd, representing release\
                \ date"
              title: write only!
              type: string
            streamable:
              default: true
              example: true
              type: boolean
              x-konfig-original-example: true
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-streamable
            downloadable:
              default: true
              example: true
              type: boolean
              x-konfig-original-example: true
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-downloadable
            license:
              description: "Possible values: no-rights-reserved, all-rights-reserved,\
                \ cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"
              enum:
              - no-rights-reserved
              - all-rights-reserved
              - cc-by
              - cc-by-nc
              - cc-by-nd
              - cc-by-sa
              - cc-by-nc-nd
              - cc-by-nc-sa
              type: string
            commentable:
              default: true
              example: true
              type: boolean
              x-konfig-original-example: true
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-commentable
            isrc:
              type: string
          type: object
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-get--tracks-track_id-streams:
      properties:
        track_id:
          type: integer
        secret_token:
          type: string
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
      - secret_token
    konfig-generated-schema-single-parameter-schema-get--tracks-track_id-comments:
      properties:
        track_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        linked_partitioning:
          type: boolean
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
      - limit
      - offset
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-post--tracks-track_id-comments:
      properties:
        track_id:
          type: integer
        comment:
          properties:
            body:
              description: Comment's content
              example: test comment
              type: string
              x-konfig-original-example: test comment
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-TracksCreateCommentRequest-properties-comment-properties-body
            timestamp: {}
          required:
          - body
          type: object
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-get--tracks-track_id-favoriters:
      properties:
        track_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--tracks-track_id-reposters:
      properties:
        track_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
      - limit
    konfig-generated-schema-single-parameter-schema-get--tracks-track_id-related:
      properties:
        track_id:
          type: integer
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-offset-schema
        linked_partitioning:
          type: boolean
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
      - access
      - limit
      - offset
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--resolve:
      properties:
        url:
          type: string
      required:
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - url
    konfig-generated-schema-single-parameter-schema-get--users-user_id:
      properties:
        user_id:
          type: integer
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
    konfig-generated-schema-single-parameter-schema-get--users-user_id-favorites:
      properties:
        user_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--users-user_id-followers:
      properties:
        user_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - limit
    konfig-generated-schema-single-parameter-schema-get--users-user_id-followings:
      properties:
        user_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - limit
    konfig-generated-schema-single-parameter-schema-get--users-user_id-followings-following_id:
      properties:
        user_id:
          type: integer
        following_id:
          type: integer
      required:
      - following_id
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - following_id
    konfig-generated-schema-single-parameter-schema-get--users-user_id-playlists:
      properties:
        user_id:
          type: integer
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        show_tracks:
          type: boolean
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - access
      - show_tracks
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--users-user_id-tracks:
      properties:
        user_id:
          type: integer
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - access
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--users-user_id-web-profiles:
      properties:
        user_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - limit
    konfig-generated-schema-single-parameter-schema-get--users-user_id-likes-tracks:
      properties:
        user_id:
          type: integer
        access:
          example: "playable,preview"
          items:
            enum:
            - playable
            - preview
            - blocked
            type: string
          type: array
          x-konfig-original-example: "playable,preview"
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-access-schema
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - access
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-get--users-user_id-likes-playlists:
      properties:
        user_id:
          type: integer
        limit:
          default: 50
          example: 50
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-limit-schema
        linked_partitioning:
          type: boolean
      required:
      - user_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - user_id
      - limit
      - linked_partitioning
    konfig-generated-schema-single-parameter-schema-delete--likes-tracks-track_id:
      properties:
        track_id:
          type: integer
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-post--likes-tracks-track_id:
      properties:
        track_id:
          type: integer
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-delete--likes-playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
    konfig-generated-schema-single-parameter-schema-post--likes-playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
    konfig-generated-schema-single-parameter-schema-delete--reposts-tracks-track_id:
      properties:
        track_id:
          type: integer
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-post--reposts-tracks-track_id:
      properties:
        track_id:
          type: integer
      required:
      - track_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - track_id
    konfig-generated-schema-single-parameter-schema-delete--reposts-playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
    konfig-generated-schema-single-parameter-schema-post--reposts-playlists-playlist_id:
      properties:
        playlist_id:
          type: integer
      required:
      - playlist_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playlist_id
    TP:
      description: Soundcloud Track object.
      example:
        comment_count: 6
        release: release
        tracks_uri: tracks_uri
        type: type
        streamable: true
        download_url: download_url
        id: 2
        last_modified: last_modified
        favoritings_count: 5
        kind: kind
        purchase_url: purchase_url
        release_year: 2
        playlist_type: playlist_type
        sharing: sharing
        tags: tags
        license: license
        user_favorite: true
        user_id: 6
        waveform_url: waveform_url
        permalink_url: permalink_url
        permalink: permalink
        playback_count: 7
        downloadable: ""
        access: playable
        available_country_codes: available_country_codes
        description: description
        created_at: created_at
        title: title
        track_count: 1
        duration: 5
        artwork_url: artwork_url
        ean: ean
        tag_list: tag_list
        release_month: 3
        genre: genre
        release_day: 9
        reposts_count: 7
        secret_uri: secret_uri
        label_name: label_name
        bpm: 0
        commentable: true
        key_signature: key_signature
        isrc: isrc
        label: null
        uri: uri
        tracks:
        - comment_count: 6
          release: release
          tracks_uri: tracks_uri
          type: type
          streamable: true
          download_url: download_url
          id: 5
          last_modified: last_modified
          favoritings_count: 4
          kind: kind
          purchase_url: purchase_url
          release_year: 8
          playlist_type: playlist_type
          sharing: sharing
          tags: tags
          license: license
          user_favorite: true
          user_id: 1
          waveform_url: waveform_url
          permalink_url: permalink_url
          permalink: permalink
          playback_count: 9
          downloadable: ""
          access: playable
          available_country_codes: available_country_codes
          description: description
          created_at: created_at
          title: title
          track_count: 6
          duration: 1
          artwork_url: artwork_url
          ean: ean
          tag_list: tag_list
          release_month: 6
          genre: genre
          release_day: 9
          reposts_count: 6
          secret_uri: secret_uri
          label_name: label_name
          bpm: 1
          commentable: true
          key_signature: key_signature
          isrc: isrc
          label: null
          uri: uri
          tracks:
          - null
          - null
          download_count: 7
          likes_count: 2
          purchase_title: purchase_title
          embeddable_by: embeddable_by
          user: ""
          user_playback_count: 9
          stream_url: stream_url
          label_id: 3
        - comment_count: 6
          release: release
          tracks_uri: tracks_uri
          type: type
          streamable: true
          download_url: download_url
          id: 5
          last_modified: last_modified
          favoritings_count: 4
          kind: kind
          purchase_url: purchase_url
          release_year: 8
          playlist_type: playlist_type
          sharing: sharing
          tags: tags
          license: license
          user_favorite: true
          user_id: 1
          waveform_url: waveform_url
          permalink_url: permalink_url
          permalink: permalink
          playback_count: 9
          downloadable: ""
          access: playable
          available_country_codes: available_country_codes
          description: description
          created_at: created_at
          title: title
          track_count: 6
          duration: 1
          artwork_url: artwork_url
          ean: ean
          tag_list: tag_list
          release_month: 6
          genre: genre
          release_day: 9
          reposts_count: 6
          secret_uri: secret_uri
          label_name: label_name
          bpm: 1
          commentable: true
          key_signature: key_signature
          isrc: isrc
          label: null
          uri: uri
          tracks:
          - null
          - null
          download_count: 7
          likes_count: 2
          purchase_title: purchase_title
          embeddable_by: embeddable_by
          user: ""
          user_playback_count: 9
          stream_url: stream_url
          label_id: 3
        download_count: 1
        likes_count: 6
        purchase_title: purchase_title
        embeddable_by: embeddable_by
        user: ""
        user_playback_count: 4
        stream_url: stream_url
        label_id: 1
      properties:
        title:
          description: Track title.
          type: string
        description:
          description: Track description.
          type: string
        artwork_url:
          description: URL to a JPEG image.
          type: string
        bpm:
          description: Tempo.
          type: integer
        comment_count:
          description: Number of comments.
          type: integer
        commentable:
          description: Is commentable.
          type: boolean
        created_at:
          description: Created timestamp.
          type: string
        download_count:
          description: NUmber of downloads.
          type: integer
        downloadable: {}
        duration:
          description: Track duration.
          type: integer
        embeddable_by:
          deprecated: true
          description: Embeddable by.
          type: string
        favoritings_count:
          description: Number of favoritings.
          type: integer
        genre:
          description: Genre
          type: string
        id:
          description: Track identifier.
          type: integer
        isrc:
          description: ISRC code.
          type: string
        key_signature:
          description: Key signature.
          type: string
        kind:
          description: Type of object (track).
          type: string
        label_name:
          description: Label user name.
          type: string
        license:
          description: License
          type: string
        permalink_url:
          description: Permalink URL.
          type: string
        playback_count:
          description: Number of plays.
          type: integer
        purchase_title:
          description: Purchase title.
          type: string
        purchase_url:
          description: Purchase URL.
          type: string
        release:
          description: Release.
          type: string
        release_day:
          description: Day of release.
          type: integer
        release_month:
          description: Month of release.
          type: integer
        release_year:
          description: Year of release.
          type: integer
        sharing:
          description: Type of sharing (public/private).
          type: string
        stream_url:
          description: URL to stream.
          type: string
        streamable:
          description: Is streamable.
          type: boolean
        tag_list:
          description: Tags.
          type: string
        uri:
          description: Track URI.
          type: string
        user: {}
        user_favorite:
          description: Is user's favourite.
          type: boolean
        user_playback_count:
          description: Number of plays by a user.
          type: integer
        waveform_url:
          description: Waveform URL.
          type: string
        available_country_codes:
          description: List of countries where track is available.
          type: string
        access:
          description: |
            Level of access the user (logged in or anonymous) has to the track.
              * `playable` - user is allowed to listen to a full track.
              * `preview` - user is allowed to preview a track, meaning a snippet is available
              * `blocked` - user can only see the metadata of a track, no streaming is possible
          enum:
          - playable
          - preview
          - blocked
          nullable: true
          type: string
        download_url:
          description: URL to download a track.
          type: string
        reposts_count:
          description: Number of reposts.
          type: integer
        secret_uri:
          description: Secret URL.
          type: string
        tags:
          description: Tags.
          nullable: true
          type: string
        ean:
          description: European Article Number.
          type: string
        label_id:
          description: Label user identifier.
          type: integer
        last_modified:
          description: Last modified timestamp.
          type: string
        permalink:
          description: Playlist permalink.
          type: string
        playlist_type:
          description: Type of playlist.
          type: string
        track_count:
          description: Count of tracks.
          type: integer
        tracks:
          description: List of tracks.
          items:
            $ref: '#/components/schemas/Track'
          type: array
        type:
          description: Playlist type.
          type: string
        user_id:
          description: User identifier.
          type: integer
        likes_count:
          description: Count of playlist likes.
          type: integer
        label:
          $ref: '#/components/schemas/Track_label'
        tracks_uri:
          description: tracks URI.
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Search_byQuery_bpm_parameter:
      properties:
        from:
          description: Return tracks with at least this bpm value
          example: 123
          type: integer
          x-konfig-original-example: 123
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-bpm-schema-properties-from
        to:
          description: Return tracks with at most this bpm value
          example: 456
          type: integer
          x-konfig-original-example: 456
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-bpm-schema-properties-to
      type: object
    Search_byQuery_duration_parameter:
      properties:
        from:
          description: Return tracks with at least this duration value
          example: 123456
          type: integer
          x-konfig-original-example: 123456
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-duration-schema-properties-from
        to:
          description: Return tracks with at most this duration value
          example: 456789
          type: integer
          x-konfig-original-example: 456789
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-duration-schema-properties-to
      type: object
    Search_byQuery_created_at_parameter:
      properties:
        from:
          description: (yyyy-mm-dd hh:mm:ss) return tracks created at this date or
            later
          example: 2020-12-24 00:00:00
          type: string
          x-konfig-original-example: 2020-12-24 00:00:00
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-created_at-schema-properties-from
        to:
          description: (yyyy-mm-dd hh:mm:ss) return tracks created at this date or
            earlier
          example: 2020-12-26 00:00:00
          type: string
          x-konfig-original-example: 2020-12-26 00:00:00
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-created_at-schema-properties-to
      type: object
    TrackMetadataRequest_track:
      example:
        downloadable: true
        release: release
        purchase_url: purchase_url
        description: description
        isrc: isrc
        title: title
        sharing: public
        license: no-rights-reserved
        embeddable_by: all
        release_date: release_date
        streamable: true
        tag_list: tag_list
        genre: genre
        permalink: permalink
        label_name: label_name
        commentable: true
      properties:
        title:
          type: string
        description:
          type: string
        permalink:
          type: string
        sharing:
          default: public
          enum:
          - public
          - private
          example: public
          type: string
          x-konfig-original-example: public
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-sharing
        embeddable_by:
          description: "who can embed this track \"all\", \"me\", or \"none\""
          enum:
          - all
          - me
          - none
          type: string
        purchase_url:
          type: string
        genre:
          type: string
        tag_list:
          description: "The tag_list property contains a list of tags separated by\
            \ spaces. Multiword tags are quoted in double quotes. We also support\
            \ machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example:\
            \ geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags\
            \ are not revealed to the user on the track pages."
          type: string
        label_name:
          type: string
        release:
          type: string
        release_date:
          description: "string, formatted as yyyy-mm-dd, representing release date"
          title: write only!
          type: string
        streamable:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-streamable
        downloadable:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-downloadable
        license:
          description: "Possible values: no-rights-reserved, all-rights-reserved,\
            \ cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"
          enum:
          - no-rights-reserved
          - all-rights-reserved
          - cc-by
          - cc-by-nc
          - cc-by-nd
          - cc-by-sa
          - cc-by-nc-nd
          - cc-by-nc-sa
          type: string
        commentable:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TrackMetadataRequest-properties-track-properties-commentable
        isrc:
          type: string
      type: object
    CreateUpdatePlaylistRequest_playlist_tracks_inner:
      example:
        id: id
      properties:
        id:
          description: SoundCloud track id
          type: string
      required:
      - id
      type: object
    CreateUpdatePlaylistRequest_playlist:
      example:
        release: release
        purchase_url: purchase_url
        set_type: album
        description: description
        title: title
        sharing: public
        tracks:
        - id: id
        - id: id
        license: license
        artwork_data: ""
        purchase_title: purchase_title
        ean: ean
        release_date: release_date
        tag_list: tag_list
        genre: genre
        permalink: permalink
        permalink_url: permalink_url
        label_name: label_name
      properties:
        title:
          description: Title of the playlist
          type: string
        description:
          description: Description of the playlist
          type: string
        sharing:
          description: public or private
          enum:
          - public
          - private
          type: string
        tracks:
          description: List of tracks to add to playlist
          items:
            $ref: '#/components/schemas/CreateUpdatePlaylistRequest_playlist_tracks_inner'
          type: array
        artwork_data:
          format: binary
          title: Only for POST
          type: string
        ean:
          description: The European Article Number
          type: string
        genre:
          description: Playlist's genre
          type: string
        label_name:
          description: Label name
          type: string
        license:
          description: License number
          type: string
        permalink:
          description: Playlist's permalink
          type: string
        permalink_url:
          description: Full permalink URL
          type: string
        purchase_title:
          description: Purchase title
          type: string
        purchase_url:
          description: Purchase URL
          type: string
        release:
          description: Playlist's release
          type: string
        release_date:
          description: Release date
          type: string
        set_type:
          description: Playlist or album type
          enum:
          - album
          - playlist
          type: string
        tag_list:
          description: A comma-separated list of tags
          type: string
      type: object
    TooManyRequests_allOf:
      properties:
        spam_warning_urn:
          type: string
      type: object
      example: null
    User_subscriptions_inner_product:
      description: product
      example:
        name: name
        id: id
      properties:
        id:
          description: subscription id instance.
          type: string
        name:
          description: subscription name instance.
          type: string
      type: object
    User_subscriptions_inner:
      description: subscription
      example:
        product:
          name: name
          id: id
        recurring: true
      properties:
        product:
          $ref: '#/components/schemas/User_subscriptions_inner_product'
        recurring:
          description: if the subscription is recurring or not
          type: boolean
      type: object
    Me_quota:
      description: user's upload quota
      example:
        unlimited_upload_quota: true
        upload_seconds_left: 4
        upload_seconds_used: 2
      properties:
        unlimited_upload_quota:
          description: unlimited upload quota.
          type: boolean
        upload_seconds_used:
          description: upload seconds used.
          type: integer
        upload_seconds_left:
          description: upload seconds left.
          nullable: true
          type: integer
      type: object
    Track_label:
      allOf:
      - nullable: true
        type: object
      - $ref: '#/components/schemas/User'
    Activities_collection_inner:
      example:
        origin:
          comment_count: 6
          release: release
          tracks_uri: tracks_uri
          type: type
          streamable: true
          download_url: download_url
          id: 2
          last_modified: last_modified
          favoritings_count: 5
          kind: kind
          purchase_url: purchase_url
          release_year: 2
          playlist_type: playlist_type
          sharing: sharing
          tags: tags
          license: license
          user_favorite: true
          user_id: 6
          waveform_url: waveform_url
          permalink_url: permalink_url
          permalink: permalink
          playback_count: 7
          downloadable: ""
          access: playable
          available_country_codes: available_country_codes
          description: description
          created_at: created_at
          title: title
          track_count: 1
          duration: 5
          artwork_url: artwork_url
          ean: ean
          tag_list: tag_list
          release_month: 3
          genre: genre
          release_day: 9
          reposts_count: 7
          secret_uri: secret_uri
          label_name: label_name
          bpm: 0
          commentable: true
          key_signature: key_signature
          isrc: isrc
          label: null
          uri: uri
          tracks:
          - comment_count: 6
            release: release
            tracks_uri: tracks_uri
            type: type
            streamable: true
            download_url: download_url
            id: 5
            last_modified: last_modified
            favoritings_count: 4
            kind: kind
            purchase_url: purchase_url
            release_year: 8
            playlist_type: playlist_type
            sharing: sharing
            tags: tags
            license: license
            user_favorite: true
            user_id: 1
            waveform_url: waveform_url
            permalink_url: permalink_url
            permalink: permalink
            playback_count: 9
            downloadable: ""
            access: playable
            available_country_codes: available_country_codes
            description: description
            created_at: created_at
            title: title
            track_count: 6
            duration: 1
            artwork_url: artwork_url
            ean: ean
            tag_list: tag_list
            release_month: 6
            genre: genre
            release_day: 9
            reposts_count: 6
            secret_uri: secret_uri
            label_name: label_name
            bpm: 1
            commentable: true
            key_signature: key_signature
            isrc: isrc
            label: null
            uri: uri
            tracks:
            - null
            - null
            download_count: 7
            likes_count: 2
            purchase_title: purchase_title
            embeddable_by: embeddable_by
            user: ""
            user_playback_count: 9
            stream_url: stream_url
            label_id: 3
          - comment_count: 6
            release: release
            tracks_uri: tracks_uri
            type: type
            streamable: true
            download_url: download_url
            id: 5
            last_modified: last_modified
            favoritings_count: 4
            kind: kind
            purchase_url: purchase_url
            release_year: 8
            playlist_type: playlist_type
            sharing: sharing
            tags: tags
            license: license
            user_favorite: true
            user_id: 1
            waveform_url: waveform_url
            permalink_url: permalink_url
            permalink: permalink
            playback_count: 9
            downloadable: ""
            access: playable
            available_country_codes: available_country_codes
            description: description
            created_at: created_at
            title: title
            track_count: 6
            duration: 1
            artwork_url: artwork_url
            ean: ean
            tag_list: tag_list
            release_month: 6
            genre: genre
            release_day: 9
            reposts_count: 6
            secret_uri: secret_uri
            label_name: label_name
            bpm: 1
            commentable: true
            key_signature: key_signature
            isrc: isrc
            label: null
            uri: uri
            tracks:
            - null
            - null
            download_count: 7
            likes_count: 2
            purchase_title: purchase_title
            embeddable_by: embeddable_by
            user: ""
            user_playback_count: 9
            stream_url: stream_url
            label_id: 3
          download_count: 1
          likes_count: 6
          purchase_title: purchase_title
          embeddable_by: embeddable_by
          user: ""
          user_playback_count: 4
          stream_url: stream_url
          label_id: 1
        created_at: created_at
        type: type
      properties:
        type:
          description: Type of activity (track).
          type: string
        created_at:
          description: Created timestamp.
          type: string
        origin:
          $ref: '#/components/schemas/TP'
      type: object
    WebProfiles_inner:
      example:
        kind: kind
        service: service
        created_at: created_at
        id: 0
        title: title
        url: url
        username: username
      properties:
        title:
          description: Link's title
          type: string
        created_at:
          description: Timestamp of when the link was added to the profile.
          type: string
        id:
          description: Id
          type: integer
        kind:
          description: Kind
          type: string
        service:
          description: Service or platform
          type: string
        url:
          description: URL of the external link
          type: string
        username:
          description: Username extracted from the external link
          type: string
      type: object
    Comment_user:
      description: SoundCloud User object
      example:
        avatar_url: avatar_url
        kind: kind
        followers_count: 5
        id: 5
        reposts_count: 7
        permalink: permalink
        permalink_url: permalink_url
        last_modified: last_modified
        uri: uri
        followings_count: 2
        username: username
      properties:
        id:
          description: unique identifier
          type: integer
        kind:
          description: kind of resource.
          type: string
        permalink:
          description: permalink of the resource.
          type: string
        username:
          description: username
          type: string
        last_modified:
          description: last modified timestamp.
          type: string
        uri:
          description: API resource URL.
          type: string
        permalink_url:
          description: URL to the SoundCloud.com page.
          type: string
        avatar_url:
          description: URL to a JPEG image.
          type: string
        followers_count:
          description: number of followers.
          type: integer
        followings_count:
          description: number of followed users.
          type: integer
        reposts_count:
          description: number of reposts from user
          type: integer
      type: object
    TracksCreateCommentRequest_comment:
      example:
        body: test comment
        timestamp: ""
      properties:
        body:
          description: Comment's content
          example: test comment
          type: string
          x-konfig-original-example: test comment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TracksCreateCommentRequest-properties-comment-properties-body
        timestamp: {}
      required:
      - body
      type: object
  securitySchemes:
    AuthHeader:
      description: "The string \"OAuth\" followed by the user’s token: OAuth ACCESS_TOKEN"
      in: header
      name: Authorization
      type: apiKey
      x-konfig-globally-required-security: false

